<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>.Net 6.0创建WebApi</title>
      <link href="/posts/4a0e.html"/>
      <url>/posts/4a0e.html</url>
      
        <content type="html"><![CDATA[<h1 id="Net-6-0-创建-WebApi"><a href="#Net-6-0-创建-WebApi" class="headerlink" title=".Net 6.0 创建 WebApi"></a>.Net 6.0 创建 WebApi</h1><blockquote><p>碎碎念：现在从头开始，用.Net 6.0 版本来搭建 WebApi，用到了 postgresql，所以俺重新拾起了在阿里云服务器上从零开始的 CentOS 7 系统（俺选择的是 CentOS 7.9 版本）安装并配置 PostgreSQL，过程遇到了蛮多问题的，但是，作为一名合格的 cv 工程师，有问题就找度娘 copy copy 啦啦啦~那么开始俺们的代码之旅吧 &#x3D;w&#x3D;</p></blockquote><h1 id="安装-postgresql"><a href="#安装-postgresql" class="headerlink" title="安装 postgresql"></a>安装 postgresql</h1><p>这个可自行上官网，找到对应的系统来安装</p><blockquote><p><a href="https://www.postgresql.org/download/">官网</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install postgresql-server</span><br></pre></td></tr></table></figure><h1 id="初始化-postgresql"><a href="#初始化-postgresql" class="headerlink" title="初始化 postgresql"></a>初始化 postgresql</h1><p>不初始化 postgresql 就没有配置文件数据这些了，那我们就无法修改设置其远程登陆的配置了，到时候就无法访问连接我们的远程数据库了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgresql-setup initdb</span><br></pre></td></tr></table></figure><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><p>进入配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /var/lib/pgsql/data/postgresql.conf</span><br></pre></td></tr></table></figure><p>打开配置后，阔以开启行号显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set number</span><br></pre></td></tr></table></figure><p>将第 59 行的监听地址改为’*‘（按按键 I 可编辑），配置默认是注释掉的，我们要把注释删掉（去掉 #），此处是允许我们远程登录，它将对所有 IP 开放；如果想仅对部分 IP 开放，那么多个 IP 之间用,（逗号+空格）隔开。（按按键 Esc 退出编辑，输入 :wq 保存并退出；输入 :wq! 会强制保存并退出）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">59 listen_addresses = &#x27;*&#x27;                   # what IP address(es) to listen on;</span><br><span class="line">60                                          # comma-separated list of addresses;</span><br><span class="line">61                                          # defaults to &#x27;localhost&#x27;; use &#x27;*&#x27; for all</span><br></pre></td></tr></table></figure><p>进入配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /var/lib/pgsql/data/pg_hba.conf</span><br></pre></td></tr></table></figure><p>看到如下，光标移到最后一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">#local   replication     postgres                                peer</span><br><span class="line">#host    replication     postgres        127.0.0.1/32            ident</span><br><span class="line">#host    replication     postgres        ::1/128                 ident</span><br></pre></td></tr></table></figure><p>将以下代码添加在配置的最后一行（此处是添加允许连接的 IP；如果想允许所有 IPv4 地址，则加入一行 host all all 0.0.0.0&#x2F;0 md5，保存方式同上一配置退出）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host    all             all             0.0.0.0/0               md5</span><br></pre></td></tr></table></figure><h1 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h1><p>是否要搞防火墙，看个人需求</p><p>查看防火墙开放端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><p>开放防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service=postgresql --permanent</span><br></pre></td></tr></table></figure><p>重启防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>查看防火墙状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables status</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service firewalld status</span><br></pre></td></tr></table></figure><p>停止防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>禁止开机自启动防火墙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure><h1 id="postgresql-系统配置"><a href="#postgresql-系统配置" class="headerlink" title="postgresql 系统配置"></a>postgresql 系统配置</h1><p>启动 postgresql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start postgresql</span><br></pre></td></tr></table></figure><p>停止 postgresql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start postgresql</span><br></pre></td></tr></table></figure><p>查看 postgresql 状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status postgresql</span><br></pre></td></tr></table></figure><p>重启 postgresql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postgresql</span><br></pre></td></tr></table></figure><p>设置 postgresql 开机自启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable postgresql</span><br></pre></td></tr></table></figure><h1 id="修改-postgresql-密码（一定要记得修改密码，否则容易被挖矿等攻击）"><a href="#修改-postgresql-密码（一定要记得修改密码，否则容易被挖矿等攻击）" class="headerlink" title="修改 postgresql 密码（一定要记得修改密码，否则容易被挖矿等攻击）"></a>修改 postgresql 密码（一定要记得修改密码，否则容易被挖矿等攻击）</h1><p>安装 postgresql 后，会自动创建 postgres 用户</p><p>切换用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -postgres</span><br></pre></td></tr></table></figure><p>打开 postgresql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql</span><br></pre></td></tr></table></figure><p>输入修改密码语句（注意语句结束需要加上 ;）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER postgres with encrypted password &#x27;你想修改设置的新密码&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>碎碎念：以上就完成了我们 postgresql 的创建啦~现在就是来开始创建 WebApi。OvO</p></blockquote><h1 id="创建-WebApi（-Net-6-0-版本）"><a href="#创建-WebApi（-Net-6-0-版本）" class="headerlink" title="创建 WebApi（.Net 6.0 版本）"></a>创建 WebApi（.Net 6.0 版本）</h1><ol><li>创建空项目文件夹，右击选择用 vscode 打开</li><li>创建两个空项目文件夹，分别用来存放前端与后端的代码（前后端分离）</li><li>进入后端文件夹，开始敲后端代码</li></ol><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><ol><li>创建解决方案</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet new sln -n 解决方案别名</span><br></pre></td></tr></table></figure><ol start="2"><li>创建 src 文件夹，用来存放以下项目：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Api 对外提供接口服务（WebApi）</span><br><span class="line"> 应用的功能（各种接口）（Classlib）</span><br><span class="line">Domain 实体（Classlib）</span><br><span class="line">Infrastructure 基础设施层，放各种引用的外部的功能或者组件（Classlib）</span><br></pre></td></tr></table></figure><ol start="3"><li>进入 src 文件夹，创建文件<br>创建 WebApi</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet new WebApi 项目名.Api --no-https</span><br></pre></td></tr></table></figure><p>创建三个 Classlib</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dotnet new Classlib 项目名.Application</span><br><span class="line">dotnet new Classlib 项目名.Domain</span><br><span class="line">dotnet new Classlib 项目名.Infrastructure</span><br></pre></td></tr></table></figure><ol start="4"><li>将项目（项目名.Api）添加到解决方案、为项目引入关系、以及下载工具包等……（省略了一些命令，自己查吧&#x3D; &#x3D;，有些需要自己注意地址）<br>在后端文件夹中<br>将 Api 项目文件添加到解决方案中，以方便运行</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet sln add .\Demo.Api\</span><br></pre></td></tr></table></figure><p>在 Api 项目文件中<br> Api 项目同时引入 Application 项目以及 Infrastructure 项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add .\DemoSoft2.Api\ reference .\DemoSoft2.Application\ .\DemoSoft2.Infrastructure\</span><br></pre></td></tr></table></figure><p>下载工具包 Microsoft.EntityFrameworkCore.Design</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Microsoft.EntityFrameworkCore.Design</span><br></pre></td></tr></table></figure><p>在 Application 项目中<br> Application 项目引入 Domain 项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add .\DemoSoft2.Application\ reference .\DemoSoft2.Domain\</span><br></pre></td></tr></table></figure><p>在 Infrastructure 项目文件中<br> Infrastructure 项目引入 Application 项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add .\DemoSoft2.Infrastructure\ reference .\DemoSoft2.Application\</span><br></pre></td></tr></table></figure><p>下载工具包 Microsoft.EntityFrameworkCore 和 Microsoft.Extensions.DependencyInjection 和 Npgsql.EntityFrameworkCore.PostgreSQL</p><blockquote><p>为了使用 WebApplication 类型，必须引入 Microsoft.AspNetCore.App，而且不是包引入，而是 FrameworkReference 引入</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;FrameworkReference Include=&quot;Microsoft.AspNetCore.App&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Microsoft.EntityFrameworkCore</span><br><span class="line">dotnet add package Microsoft.Extensions.DependencyInjection</span><br><span class="line">dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL</span><br></pre></td></tr></table></figure><h3 id="各项目中代码"><a href="#各项目中代码" class="headerlink" title="各项目中代码"></a>各项目中代码</h3><h4 id="Api（对外提供接口服务）"><a href="#Api（对外提供接口服务）" class="headerlink" title="Api（对外提供接口服务）"></a>Api（对外提供接口服务）</h4><ol><li>appsettings.json（连接数据库）<br>在”AllowedHosts”: “*“后添加代码：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">,</span><br><span class="line">  &quot;ConnectionStrings&quot;: &#123;</span><br><span class="line">    &quot;PostgreSQL&quot;:&quot;server=你的域名或者IP地址;database=数据库名;uid=postgres;pwd=postgresql数据库登录密码;&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Program.cs（依赖注入）</li></ol><p>引入 DemoSoft.Infrastructure 命名空间，以方便引用 AddInfrastructure</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">using DemoSoft.Infrastructure;</span><br></pre></td></tr></table></figure><p>在 var builder &#x3D; WebApplication.CreateBuilder(args);后添加代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// Add services to the container.</span><br><span class="line">// 注册基础设施层Infrastructure中的所有实例</span><br><span class="line">builder.Services.AddInfrastructure(builder.Configuration);</span><br></pre></td></tr></table></figure><h4 id="Application（应用的功能（各种接口））"><a href="#Application（应用的功能（各种接口））" class="headerlink" title="Application（应用的功能（各种接口））"></a>Application（应用的功能（各种接口））</h4><h4 id="Domain（实体）"><a href="#Domain（实体）" class="headerlink" title="Domain（实体）"></a>Domain（实体）</h4><ol><li>Base（基础属性（抽象被继承类接口））</li><li>Entity（设计表字段、表关系、表属性（继承接口））</li></ol><h4 id="Infrastructure（基础设施层，放各种引用的外部的功能或者组件）"><a href="#Infrastructure（基础设施层，放各种引用的外部的功能或者组件）" class="headerlink" title="Infrastructure（基础设施层，放各种引用的外部的功能或者组件）"></a>Infrastructure（基础设施层，放各种引用的外部的功能或者组件）</h4><ol><li><p>Persistence（数据持久化）<br>|- Configuration（配置）<br> |– Base（公共基础配置）<br> |— <a href="./%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A9%E5%8C%BA/BaseEntityConfiguration.cs">BaseEntityConfiguration.cs</a>（基础公共配置）<br> |– <a href="./%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A9%E5%8C%BA/%E8%A1%A8Configuration.cs">各个表.cs</a>（配置每张表属性，设置表名）<br>|- <a href="./%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A9%E5%8C%BA/%E9%A1%B9%E7%9B%AEDbContext.cs">DbContext.cs</a>（配置数据库上下文）</p></li><li><p><a href="./img/../%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A9%E5%8C%BA/DependencyInjection.cs">DependencyInjection.cs</a>（AddInfrastructure：注册基础设施层 Infrastructure 中的所有实例的功能）</p></li></ol><h1 id="小-Tip"><a href="#小-Tip" class="headerlink" title="小 Tip"></a>小 Tip</h1><p>登录远程连接，切换 postgresql 用户后的一些命令</p><p>查看 postgresql 当前有哪些数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\l</span><br></pre></td></tr></table></figure><p>进入指定数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\c 数据库名;</span><br></pre></td></tr></table></figure><p>在数据库中，查看指定表（表名记得加 “” ，结尾记得加 ; ，很多操作语句基本与 SqlServer 操作语句类似）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from &quot;表名&quot;;</span><br></pre></td></tr></table></figure><p>退出数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br></pre></td></tr></table></figure><h1 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h1><h2 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Value cannot be null. (Parameter ‘connectionString‘)</span><br></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>ConnectionStrings 放错了位置（在 appsettings.json 中,连接字符串的层级不一样要注意！）<br>appsettings.json 中正确的层级应该如下，注意 ConnectionStrings 的位置，还有注意不要拼错 ConnectionStrings</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;Logging&quot;: &#123;</span><br><span class="line">    &quot;LogLevel&quot;: &#123;</span><br><span class="line">      &quot;Default&quot;: &quot;Information&quot;,</span><br><span class="line">      &quot;Microsoft&quot;: &quot;Warning&quot;,</span><br><span class="line">      &quot;Microsoft.Hosting.Lifetime&quot;: &quot;Information&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;AllowedHosts&quot;: &quot;*&quot;,</span><br><span class="line">  &quot;ConnectionStrings&quot;: &#123;</span><br><span class="line">    &quot;PostgreSQL&quot;:&quot;server=你的域名或者IP地址;database=数据库名;uid=postgres;pwd=postgresql数据库登录密码;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="作业尝试"><a href="#作业尝试" class="headerlink" title="作业尝试"></a>作业尝试</h1><p>做到目前（远程连接并创建数据库以及创建表），就是以下的效果了~<br><img src="/./img/%E4%BD%9C%E4%B8%9A.PNG"></p><h1 id="码农日记"><a href="#码农日记" class="headerlink" title="码农日记"></a>码农日记</h1><h3 id="1-加油嗷！┗-｀-O′-┛"><a href="#1-加油嗷！┗-｀-O′-┛" class="headerlink" title="1.加油嗷！┗|｀ O′|┛"></a>1.加油嗷！┗|｀ O′|┛</h3>]]></content>
      
      
      <categories>
          
          <category> ASP .NET Coer WebApi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .Net 6.0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新的旅程</title>
      <link href="/posts/c309.html"/>
      <url>/posts/c309.html</url>
      
        <content type="html"><![CDATA[<h1 id="2022-9-1-天气晴-风和日丽"><a href="#2022-9-1-天气晴-风和日丽" class="headerlink" title="2022.9.1 天气晴 风和日丽"></a>2022.9.1 天气晴 风和日丽</h1><p>哈哈哈，今天是去公司上班的第一天，心里还有点小紧张！作为初入职场的新人，我的内心既兴奋又紧张，进了公司之后发现大家都很好相处，而且都很幽默有趣！nice！我旁边的小姐姐很好看，性格也好好！还有负责带我的主管大佬人也好好！HR 小姐姐也超可爱的！嘿嘿，希望自己也能更加努力，未来努力成为像他们一样的大佬！╰(<em>°▽°</em>)╯</p>]]></content>
      
      
      <categories>
          
          <category> 公司日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 码农日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo食用教程</title>
      <link href="/posts/95ae.html"/>
      <url>/posts/95ae.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="我の碎碎念"><a href="#我の碎碎念" class="headerlink" title="我の碎碎念"></a>我の碎碎念</h2><p>哈哈哈，终于搭建好自己的博客啦！当时看到人家的博客做的好好看，所以自己也忍不住想入手了~那么第一篇博客就纪录关于我搭建博客所使用的框架 —— Hexo（开源的静态博客生成器），方便以后有需要重新搭建框架的时候使用，从零开始的 Hexo 搭建教程！( •̀ ω •́ )y</p><h2 id="Hexo-框架介绍"><a href="#Hexo-框架介绍" class="headerlink" title="Hexo 框架介绍"></a>Hexo 框架介绍</h2><p>Hexo 是一个快速、简洁且高效的博客框架，我理解就是专门为写博客而诞生的。Hexo 支持使用 Markdown 来解析文章，是可以去主题官网选择好看的主题，并且能魔改主题文件生成个性化的静态网页，然后一键部署到网站上，制作出可以和大家一起分享技术、心得、生活等的个人博客网站 ~（我现在使用的是框架 Hexo +主题 Butterfly）</p><h2 id="安装-Hexo-前提"><a href="#安装-Hexo-前提" class="headerlink" title="安装 Hexo 前提"></a>安装 Hexo 前提</h2><p>安装 Hexo 首先有个前提，就是你得先安装好 Node.js 以及 Git，并且 Node.js 的版本不能低于 10.13（官方建议使用 12.0 及以上版本），还没安装的铁铁，可以先去下载一下 Node.js 以及 Git，安装了的铁铁可以继续往下看安装 Hexo 步骤啦~</p><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>首先，选择你想要存放笔记的地方，新建一个文件夹（我的文件夹命名是<strong>Dou-JiGu_Blogs</strong>），然后在你新建笔记文件夹的目录下右击选择 Git Bash Here</p><h2 id="切换淘宝镜像"><a href="#切换淘宝镜像" class="headerlink" title="切换淘宝镜像"></a>切换淘宝镜像</h2><p>由于 node 安装插件是从国外服务器下载，受网络影响大，速度慢且可能出现异常。所以如果 npm 的服务器在中国就好了，所以我们乐于分享的淘宝团队（阿里巴巴旗下业务阿里云）干了这事。来自官网的话：“这是一个完整 npmjs.org 镜像，你可以用此代替官方版本(只读)，同步频率目前为 10 分钟 一次以保证尽量与官方服务同步，也就是说我们可以使用阿里布置在国内的服务器来进行 node 安装，使下载速度更快些</p><ol><li>切换淘宝镜像：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ol start="2"><li>切回源：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org/）</span><br></pre></td></tr></table></figure><h2 id="全局安装-Hexo-脚手架工具"><a href="#全局安装-Hexo-脚手架工具" class="headerlink" title="全局安装 Hexo 脚手架工具"></a>全局安装 Hexo 脚手架工具</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h2><p>这里才是 Hexo 框架的搭建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="下载-Git-连接远程仓库"><a href="#下载-Git-连接远程仓库" class="headerlink" title="下载 Git 连接远程仓库"></a>下载 Git 连接远程仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="Hexo-三件套"><a href="#Hexo-三件套" class="headerlink" title="Hexo 三件套"></a>Hexo 三件套</h2><p>清空已有 hexo 网站文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><p>依据网页文本与新的 CSS 样式生成新网站文件（source 这个文件会在 hexo g 打包时打包到 public 中）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>启动本地服务器，可以在 localhost:4000 查看网站修改效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>查看 hexo 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -version</span><br></pre></td></tr></table></figure><h2 id="从-github-仓库下载目标：butterfly-主题"><a href="#从-github-仓库下载目标：butterfly-主题" class="headerlink" title="从 github 仓库下载目标：butterfly 主题"></a>从 github 仓库下载目标：butterfly 主题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h2 id="hexo-三件套"><a href="#hexo-三件套" class="headerlink" title="hexo 三件套"></a>hexo 三件套</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl（清除缓存）、hexo g（提交到本地）、hexo s（运行 hexo 跑起来）</span><br></pre></td></tr></table></figure><h2 id="配置文章链接转数字或字母：https-github-com-rozbo-hexo-abbrlink"><a href="#配置文章链接转数字或字母：https-github-com-rozbo-hexo-abbrlink" class="headerlink" title="配置文章链接转数字或字母：https://github.com/rozbo/hexo-abbrlink"></a>配置文章链接转数字或字母：<a href="https://github.com/rozbo/hexo-abbrlink">https://github.com/rozbo/hexo-abbrlink</a></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><h2 id="进入根目录中配置-config-yml，替换-permalink"><a href="#进入根目录中配置-config-yml，替换-permalink" class="headerlink" title="进入根目录中配置\ _config.yml，替换 permalink"></a>进入根目录中配置\ _config.yml，替换 permalink</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html</span><br></pre></td></tr></table></figure><h2 id="进入根目录中配置-config-yml，修改语言-language"><a href="#进入根目录中配置-config-yml，修改语言-language" class="headerlink" title="进入根目录中配置\ _config.yml，修改语言 language"></a>进入根目录中配置\ _config.yml，修改语言 language</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h2 id="一、配置插件"><a href="#一、配置插件" class="headerlink" title="一、配置插件"></a>一、配置插件</h2><ol><li>配置文章链接转数字或字母<br>复制 github 文档配置文章链接转数字或字母所需的配置到根目录中配置\ _config.yml 中最底下</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">alg: crc32 #support crc16(default) and crc32</span><br><span class="line">rep: hex #support dec(default) and hex</span><br></pre></td></tr></table></figure><ol start="2"><li>本地搜索<br>到根目录中配置\ _config.yml 中最底下添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: all</span><br><span class="line">content: true</span><br></pre></td></tr></table></figure><h2 id="在根目录创建-config-butterfly-yml-文件，复制-themes-x2F-butterfly-x2F-config-yml-内容到根目录-config-butterfly-yml-中"><a href="#在根目录创建-config-butterfly-yml-文件，复制-themes-x2F-butterfly-x2F-config-yml-内容到根目录-config-butterfly-yml-中" class="headerlink" title="在根目录创建\ _config.butterfly.yml 文件，复制 themes&#x2F;butterfly&#x2F;_config.yml 内容到根目录_config.butterfly.yml 中"></a>在根目录创建\ _config.butterfly.yml 文件，复制 themes&#x2F;butterfly&#x2F;_config.yml 内容到根目录_config.butterfly.yml 中</h2><h2 id="在-config-butterfly-yml-中搜索-local-search-替换"><a href="#在-config-butterfly-yml-中搜索-local-search-替换" class="headerlink" title="在\ _config.butterfly.yml 中搜索 local_search 替换"></a>在\ _config.butterfly.yml 中搜索 local_search 替换</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">enable: true</span><br><span class="line">preload: false</span><br><span class="line">CDN:</span><br></pre></td></tr></table></figure><h2 id="二、个性化个人主页资料"><a href="#二、个性化个人主页资料" class="headerlink" title="二、个性化个人主页资料"></a>二、个性化个人主页资料</h2><p>在根目录\ _config.yml 中<br>例如我的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 兜 叽 咕 の 小 小 世 界 # 封面显示标题</span><br><span class="line">subtitle: &#x27;兜叽咕の博客&#x27;</span><br><span class="line">description: &#x27;老骥伏枥，志在千里。&#x27; # 描述站点</span><br><span class="line">keywords: &#x27;兜叽咕,IT,分享,日常,浪漫 de 唯物主义&#x27; # 关键词，搜索时可检索到你的博客（可写 150 字左右）</span><br><span class="line">author: 兜叽咕 # 作者</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>因为我们修改的是配置文件需要重新运行，修改文章之类就不用重启（终止进程，hexo 三件套重跑一遍）</p><h2 id="三、将博客部署到网站上"><a href="#三、将博客部署到网站上" class="headerlink" title="三、将博客部署到网站上"></a>三、将博客部署到网站上</h2><ol><li>注册登录 github</li><li>创建仓库（严格命名：你的用户名.github.io）</li><li>配置 ssh（因为我自己配置过，所以大家可以去看大佬的教程）</li><li>配置完 ssh，就可以得到 ssh 地址，将 ssh 地址复制到根目录中配置_config.yml 中 deploy（替换）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   deploy:</span><br><span class="line"></span><br><span class="line">- type: git</span><br><span class="line">  repository: git@github.com:Dou-JiGu/Dou-JiGu.github.io.git # ssh 地址</span><br><span class="line">  branch: main # 分支</span><br></pre></td></tr></table></figure><h2 id="hexo-三件套-1"><a href="#hexo-三件套-1" class="headerlink" title="hexo 三件套"></a>hexo 三件套</h2><p>最后一步换为 hexo d 提交，也可以使用联合命令，然后就可以登录 github 到你的仓库（你的用户名.github.io 仓库）查看你上传的文件</p><h2 id="访问博客"><a href="#访问博客" class="headerlink" title="访问博客"></a>访问博客</h2><p>之后复制仓库名：你的用户名.github.io 仓库 即可通过网页访问你的博客了~</p><h3 id="四、继续配置"><a href="#四、继续配置" class="headerlink" title="四、继续配置"></a>四、继续配置</h3><p>到根目录中配置\ _config.yml 中 deploy 中新加的百度主动推送（格式一定要对齐！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">- type: git</span><br><span class="line">  repository: git@github.com:Dou-JiGu/Dou-JiGu.github.io.git # ssh 地址</span><br><span class="line">  branch: main # 分支</span><br><span class="line">- type: baidu_url_submitter # 这是新加的百度主动推送</span><br></pre></td></tr></table></figure><p>到根目录中配置\ _config.yml 中最后添加配置代码，并替换 theme</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line"></span><br><span class="line">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line"></span><br><span class="line">live2d:</span><br><span class="line">enable: true #开关插件版看板娘</span><br><span class="line">scriptFrom: local # 默认</span><br><span class="line"></span><br><span class="line"># scriptFrom: https://cdn.cbd.int/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br><span class="line"></span><br><span class="line">tagMode: false # 标签模式, 是否仅替换 live2d tag 标签而非插入到所有页面中</span><br><span class="line">debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">model:</span><br><span class="line">use: live2d-widget-model-koharu # 可替换模型 # npm-module package name # use: https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json # 你的自定义 url</span><br><span class="line">display:</span><br><span class="line">position: left #控制看板娘位置</span><br><span class="line">width: 150 #控制看板娘大小</span><br><span class="line">height: 300 #控制看板娘大小</span><br><span class="line">mobile:</span><br><span class="line">show: false # 手机中是否展示</span><br><span class="line"></span><br><span class="line"># https://github.com/hexojs/hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">sitemap:</span><br><span class="line">path: sitemap.xml</span><br><span class="line">rel: false</span><br><span class="line">tags: true</span><br><span class="line">categories: true</span><br><span class="line"></span><br><span class="line"># https://github.com/coneycode/hexo-generator-baidu-sitemap</span><br><span class="line"></span><br><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"># https://github.com/hexojs/hexo-generator-feed</span><br><span class="line"></span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line"></span><br><span class="line">plugins: - hexo-generator-feed - hexo-generator-baidu-sitemap - hexo-generator-sitemap</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>要在 hexo generate 或 hexo deploy 之前使用追番插件，否则不会显示追番页面！</p><p>更新番剧命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u</span><br></pre></td></tr></table></figure><p>删除数据命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><h2 id="追番插件"><a href="#追番插件" class="headerlink" title="追番插件"></a>追番插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/HCLonely/hexo-bilibili-bangumi</span><br><span class="line"></span><br><span class="line">bangumi: # 追番设置</span><br><span class="line">enable: true</span><br><span class="line">path:</span><br><span class="line">vmid: 275606116 # 替换为自己的 b 站的用户 id</span><br><span class="line">title: &#x27;追番列表&#x27;</span><br><span class="line">quote: &#x27;生命不息，追番不止！&#x27;</span><br><span class="line">show: 1</span><br><span class="line">lazyload: false</span><br><span class="line">loading:</span><br><span class="line">metaColor:</span><br><span class="line">color:</span><br><span class="line">webp:</span><br><span class="line">progress:</span><br><span class="line">extra_options:</span><br><span class="line">key: value</span><br><span class="line">cinema: # 追剧设置</span><br><span class="line">enable: false</span><br><span class="line">path:</span><br><span class="line">vmid: 275606116 # 替换为自己的 b 站的用户 id</span><br><span class="line">title: &#x27;追剧列表&#x27;</span><br><span class="line">quote: &#x27;生命不息，追剧不止！&#x27;</span><br><span class="line">show: 1</span><br><span class="line">lazyload: true</span><br><span class="line">loading:</span><br><span class="line">metaColor:</span><br><span class="line">color:</span><br><span class="line">webp:</span><br><span class="line">progress:</span><br><span class="line">extra_options:</span><br><span class="line">key: value</span><br><span class="line"></span><br><span class="line"># 百度主动推送</span><br><span class="line"></span><br><span class="line"># https://github.com/huiwang/hexo-baidu-url-submit</span><br><span class="line"></span><br><span class="line">baidu_url_submit:</span><br><span class="line">count: 1 # 提交最新的多少个链接</span><br><span class="line">host: www.wowowo.top # 在百度站长平台中添加的域名</span><br><span class="line">token: SzqY2ifHCYLLf4jH # 秘钥</span><br><span class="line">path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line"></span><br><span class="line"># APlayer</span><br><span class="line"></span><br><span class="line"># https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</span><br><span class="line"></span><br><span class="line">aplayer:</span><br><span class="line">meting: true</span><br><span class="line">asset_inject: false</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一一装上插件"><a href="#一一装上插件" class="headerlink" title="一一装上插件"></a>一一装上插件</h2><p>安装 live2d</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装 live2d</span><br><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>安装模型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装模型</span><br><span class="line">npm install --save live2d-widget-model-koharu # 可替换模型</span><br></pre></td></tr></table></figure><p>安装 sitemap ，方便爬虫爬我们的网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装 sitemap ，方便爬虫爬我们的网站</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br></pre></td></tr></table></figure><p>装 Rss ，也类似方便爬虫爬我们的网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 装 Rss ，也类似方便爬虫爬我们的网站</span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>追番插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 追番插件</span><br><span class="line">npm install hexo-bilibili-bangumi --save</span><br><span class="line">（配置一下，vmid 需要自己去拿！）</span><br></pre></td></tr></table></figure><p>百度主动推送</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 百度主动推送</span><br><span class="line">记得修改一下百度主动推送，参照：</span><br><span class="line"></span><br><span class="line"># https://github.com/huiwang/hexo-baidu-url-submit</span><br><span class="line"></span><br><span class="line">baidu_url_submit:</span><br><span class="line">count: 1 # 提交最新的多少个链接</span><br><span class="line">host: wowowo.top # 在百度站长平台中添加的域名，改成自己的站点</span><br><span class="line">token: 自己的秘钥 # 秘钥</span><br><span class="line">path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line">（具体看大佬的教程）</span><br></pre></td></tr></table></figure><p>一些配置</p><ol><li><p>将主题配置中的懒加载 lazyload:enable 打开，把根目录配置里的懒加载关闭（避免冲突）</p></li><li><p>到主题配置\ _config.butterfly.yml 里，查找 aplayerInject，全部改为 true，防止重复加载</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">aplayerInject: # 防止重复加载</span><br><span class="line">enable: true</span><br><span class="line">per_page: true</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>将音乐代码放到主题配置_config.butterfly.yml 里的 Inject 中选择位置 head&#x2F;bottom，将语法复制进去</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># aplayer 音乐</span><br><span class="line"></span><br><span class="line">- &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;1708664797&quot; data-server=&quot;tencent&quot; data-type=&quot;playlist&quot;   data-order=&quot;list&quot; data-fixed=&quot;true&quot; data-preload=&quot;auto&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; &gt;&lt;/div&gt;</span><br><span class="line">  （记得改 data-id 以及 data-server，具体看大佬教程，可以去github搜aplayer音乐看如何配置）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五、装配-PWA"><a href="#五、装配-PWA" class="headerlink" title="五、装配 PWA"></a>五、装配 PWA</h2><p>用处：</p><ol><li>右上角可以有安装按钮，可以离线看博客</li><li>可以有缓存，加快我们的访问速度</li><li>博客更新后，右上角会有通知<br>安装必要插件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install --global gulp-cli # 全局安装 gulp 命令集</span><br><span class="line">npm install workbox-build gulp --save # 安装 workbox 和 gulp 插件</span><br></pre></td></tr></table></figure><p>压缩 html 插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 压缩 html 插件</span><br><span class="line"></span><br><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install --save gulp-htmlmin</span><br></pre></td></tr></table></figure><p>压缩 css 插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 压缩 css 插件</span><br><span class="line"></span><br><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><p>压缩 js 插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 压缩 js 插件</span><br><span class="line"></span><br><span class="line"># 使用 babel 压缩 js，与 terser 二选一</span><br><span class="line"></span><br><span class="line">npm install --save-dev gulp-uglify</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line"></span><br><span class="line"># 使用 terser 压缩 js，与 babel 二选一（建议 terser 压缩 js，babel 容易混淆代码语义）</span><br><span class="line"></span><br><span class="line">npm install gulp-terser --save-dev</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure><p>压缩图片插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 压缩图片插件（图片压缩，一定是 node12.x 才有用，node16.x 就没有用了）</span><br><span class="line"></span><br><span class="line">npm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><p>压缩字体插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 压缩字体插件(font-min 仅支持压缩 ttf 格式的字体包)</span><br><span class="line"></span><br><span class="line">npm install gulp-fontmin --save-dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在根目录的 package.json 中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&quot;type&quot;: &quot;module&quot;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在根目录新建文件-gulpfile-js，复制以下内容到-gulpfile-js-中（主要用处：用来压缩）"><a href="#在根目录新建文件-gulpfile-js，复制以下内容到-gulpfile-js-中（主要用处：用来压缩）" class="headerlink" title="在根目录新建文件 gulpfile.js，复制以下内容到 gulpfile.js 中（主要用处：用来压缩）"></a>在根目录新建文件 gulpfile.js，复制以下内容到 gulpfile.js 中（主要用处：用来压缩）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import gulp from &#x27;gulp&#x27;;</span><br><span class="line">import cleanCSS from &#x27;gulp-clean-css&#x27;;</span><br><span class="line">import htmlmin from &#x27;gulp-htmlmin&#x27;;</span><br><span class="line">import htmlclean from &#x27;gulp-htmlclean&#x27;;</span><br><span class="line">import workbox from &#x27;workbox-build&#x27;;</span><br><span class="line">import fontmin from &#x27;gulp-fontmin&#x27;;</span><br><span class="line"></span><br><span class="line">// 若使用 babel 压缩 js，则取消下方注释，并注释 terser 的代码</span><br><span class="line">// var uglify = require(&#x27;gulp-uglify&#x27;);</span><br><span class="line">// var babel = require(&#x27;gulp-babel&#x27;);</span><br><span class="line"></span><br><span class="line">// 若使用 terser 压缩 js</span><br><span class="line">import terser from &#x27;gulp-terser&#x27;;</span><br><span class="line"></span><br><span class="line">//pwa</span><br><span class="line">gulp.task(&#x27;generate-service-worker&#x27;, () =&gt; &#123;</span><br><span class="line">return workbox.injectManifest(&#123;</span><br><span class="line">swSrc: &#x27;./sw-template.js&#x27;,</span><br><span class="line">swDest: &#x27;./public/sw.js&#x27;,</span><br><span class="line">globDirectory: &#x27;./public&#x27;,</span><br><span class="line">globPatterns: [</span><br><span class="line">// 缓存所有以下类型的文件，极端不推荐</span><br><span class="line">// &quot;**/*.&#123;html,css,js,json,woff2,xml&#125;&quot;</span><br><span class="line">// 推荐只缓存 404，主页和主要样式和脚本。</span><br><span class="line">&#x27;404.html&#x27;,</span><br><span class="line">&#x27;index.html&#x27;,</span><br><span class="line">&#x27;js/main.js&#x27;,</span><br><span class="line">&#x27;css/index.css&#x27;,</span><br><span class="line">],</span><br><span class="line">modifyURLPrefix: &#123;</span><br><span class="line">&#x27;&#x27;: &#x27;./&#x27;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//minify js babel</span><br><span class="line">// 若使用 babel 压缩 js，则取消下方注释，并注释 terser 的代码</span><br><span class="line">// gulp.task(&#x27;compress&#x27;, () =&gt;</span><br><span class="line">// gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;])</span><br><span class="line">// .pipe(babel(&#123;</span><br><span class="line">// presets: [&#x27;@babel/preset-env&#x27;]</span><br><span class="line">// &#125;))</span><br><span class="line">// .pipe(uglify().on(&#x27;error&#x27;, function(e)&#123;</span><br><span class="line">// console.log(e);</span><br><span class="line">// &#125;))</span><br><span class="line">// .pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">// );</span><br><span class="line"></span><br><span class="line">// minify js - gulp-tester</span><br><span class="line">// 若使用 terser 压缩 js</span><br><span class="line">gulp.task(&#x27;compress&#x27;, () =&gt;</span><br><span class="line">gulp</span><br><span class="line">.src([</span><br><span class="line">&#x27;./public/**/*.js&#x27;,</span><br><span class="line">&#x27;!./public/**/*.min.js&#x27;,</span><br><span class="line">&#x27;!./public/js/custom/galmenu.js&#x27;,</span><br><span class="line">&#x27;!./public/js/custom/gitcalendar.js&#x27;,</span><br><span class="line">])</span><br><span class="line">.pipe(terser())</span><br><span class="line">.pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">//css</span><br><span class="line">gulp.task(&#x27;minify-css&#x27;, () =&gt; &#123;</span><br><span class="line">return gulp</span><br><span class="line">.src(&#x27;./public/\*_/_.css&#x27;)</span><br><span class="line">.pipe(</span><br><span class="line">cleanCSS(&#123;</span><br><span class="line">compatibility: &#x27;ie11&#x27;,</span><br><span class="line">&#125;)</span><br><span class="line">)</span><br><span class="line">.pipe(gulp.dest(&#x27;./public&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩 public 目录内 html</span><br><span class="line">gulp.task(&#x27;minify-html&#x27;, () =&gt; &#123;</span><br><span class="line">return gulp</span><br><span class="line">.src(&#x27;./public/\*_/_.html&#x27;)</span><br><span class="line">.pipe(htmlclean())</span><br><span class="line">.pipe(</span><br><span class="line">htmlmin(&#123;</span><br><span class="line">removeComments: true, //清除 HTML 註释</span><br><span class="line">collapseWhitespace: true, //压缩 HTML</span><br><span class="line">collapseBooleanAttributes: true, //省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">removeEmptyAttributes: true, //删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">removeScriptTypeAttributes: true, //删除 &lt;script&gt; 的 type=&quot;text/javascript&quot;</span><br><span class="line">removeStyleLinkTypeAttributes: true, //删除 &lt;style&gt; 和 &lt;link&gt; 的 type=&quot;text/css&quot;</span><br><span class="line">minifyJS: true, //压缩页面 JS</span><br><span class="line">minifyCSS: true, //压缩页面 CSS</span><br><span class="line">minifyURLs: true,</span><br><span class="line">&#125;)</span><br><span class="line">)</span><br><span class="line">.pipe(gulp.dest(&#x27;./public&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//压缩字体</span><br><span class="line">function minifyFont(text, cb) &#123;</span><br><span class="line">gulp</span><br><span class="line">.src(&#x27;./public/fonts/\*.ttf&#x27;) //原字体所在目录</span><br><span class="line">.pipe(</span><br><span class="line">fontmin(&#123;</span><br><span class="line">text: text,</span><br><span class="line">&#125;)</span><br><span class="line">)</span><br><span class="line">.pipe(gulp.dest(&#x27;./public/fontsdest/&#x27;)) //压缩后的输出目录</span><br><span class="line">.on(&#x27;end&#x27;, cb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;mini-font&#x27;, cb =&gt; &#123;</span><br><span class="line">var buffers = [];</span><br><span class="line">gulp</span><br><span class="line">.src([&#x27;./public/**/*.html&#x27;]) //HTML 文件所在目录请根据自身情况修改</span><br><span class="line">.on(&#x27;data&#x27;, function (file) &#123;</span><br><span class="line">buffers.push(file.contents);</span><br><span class="line">&#125;)</span><br><span class="line">.on(&#x27;end&#x27;, function () &#123;</span><br><span class="line">var text = Buffer.concat(buffers).toString(&#x27;utf-8&#x27;);</span><br><span class="line">minifyFont(text, cb);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task(</span><br><span class="line">&#x27;default&#x27;,</span><br><span class="line">gulp.series(</span><br><span class="line">&#x27;generate-service-worker&#x27;,</span><br><span class="line">gulp.parallel(&#x27;compress&#x27;, &#x27;minify-html&#x27;, &#x27;minify-css&#x27;, &#x27;mini-font&#x27;)</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在根目录新建文件 sw-template.js 文件，复制以下内容到 sw-template.js 中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const workboxVersion = &#x27;5.1.3&#x27;;</span><br><span class="line"></span><br><span class="line">importScripts(`https://storage.googleapis.com/workbox-cdn/releases/$&#123;workboxVersion&#125;/workbox-sw.js`);</span><br><span class="line"></span><br><span class="line">workbox.core.setCacheNameDetails(&#123;</span><br><span class="line">prefix: &#x27;兜叽咕&#x27;, // 缓存名称</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">workbox.core.skipWaiting();</span><br><span class="line"></span><br><span class="line">workbox.core.clientsClaim();</span><br><span class="line"></span><br><span class="line">// 注册成功后要立即缓存的资源列表</span><br><span class="line">// 具体缓存列表在 gulpfile.js 中配置，见下文</span><br><span class="line">workbox.precaching.precacheAndRoute(self.\_\_WB_MANIFEST, &#123;</span><br><span class="line">directoryIndex: null,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 清空过期缓存</span><br><span class="line">workbox.precaching.cleanupOutdatedCaches();</span><br><span class="line"></span><br><span class="line">// 图片资源（可选，不需要就注释掉）</span><br><span class="line">// workbox.routing.registerRoute(</span><br><span class="line">// /\.(?:png|jpg|jpeg|gif|bmp|webp|svg|ico)$/,</span><br><span class="line">// new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">// cacheName: &#x27;images&#x27;,</span><br><span class="line">// plugins: [</span><br><span class="line">// new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">// maxEntries: 1000,</span><br><span class="line">// maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">// &#125;),</span><br><span class="line">// new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">// statuses: [0, 200],</span><br><span class="line">// &#125;),</span><br><span class="line">// ],</span><br><span class="line">// &#125;)</span><br><span class="line">// )</span><br><span class="line"></span><br><span class="line">// 字体文件（可选，不需要就注释掉）</span><br><span class="line">workbox.routing.registerRoute(</span><br><span class="line">/\.(?:eot|ttf|woff|woff2)$/,</span><br><span class="line">new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">cacheName: &#x27;fonts&#x27;,</span><br><span class="line">plugins: [</span><br><span class="line">new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">maxEntries: 1000,</span><br><span class="line">maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">&#125;),</span><br><span class="line">new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">statuses: [0, 200],</span><br><span class="line">&#125;),</span><br><span class="line">],</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// 谷歌字体（可选，不需要就注释掉）</span><br><span class="line">workbox.routing.registerRoute(</span><br><span class="line">/^https:\/\/fonts\.googleapis\.com/,</span><br><span class="line">new workbox.strategies.StaleWhileRevalidate(&#123;</span><br><span class="line">cacheName: &#x27;google-fonts-stylesheets&#x27;,</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line">workbox.routing.registerRoute(</span><br><span class="line">/^https:\/\/fonts\.gstatic\.com/,</span><br><span class="line">new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">cacheName: &#x27;google-fonts-webfonts&#x27;,</span><br><span class="line">plugins: [</span><br><span class="line">new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">maxEntries: 1000,</span><br><span class="line">maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">&#125;),</span><br><span class="line">new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">statuses: [0, 200],</span><br><span class="line">&#125;),</span><br><span class="line">],</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// jsdelivr 的 CDN 资源（可选，不需要就注释掉）</span><br><span class="line">// workbox.routing.registerRoute(</span><br><span class="line">// /^https:\/\/cdn\.jsdelivr\.net/,</span><br><span class="line">// new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">// cacheName: &#x27;static-libs&#x27;,</span><br><span class="line">// plugins: [</span><br><span class="line">// new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">// maxEntries: 1000,</span><br><span class="line">// maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">// &#125;),</span><br><span class="line">// new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">// statuses: [0, 200],</span><br><span class="line">// &#125;),</span><br><span class="line">// ],</span><br><span class="line">// &#125;)</span><br><span class="line">// )</span><br><span class="line"></span><br><span class="line">workbox.googleAnalytics.initialize();</span><br></pre></td></tr></table></figure><p>在[Blogroot]\themes\butterfly\layout\includes\third-party\目录下新建 pwanotice.pug 文件，（通知博客文章更新了），打开[Blogroot]\themes\butterfly\layout\includes\third-party\pwanotice.pug,输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#app-refresh.app-refresh(style=&#x27;position: fixed;top: -2.2rem;left: 0;right: 0;z-index: 99999;padding: 0 1rem;font-size: 15px;height: 2.2rem;transition: all 0.3s ease;&#x27;)</span><br><span class="line">.app-refresh-wrap(style=&#x27; display: flex;color: #fff;height: 100%;align-items: center;justify-content: center;&#x27;)</span><br><span class="line">label ✨ 有新文章啦！ 👉</span><br><span class="line">a(href=&#x27;javascript:void(0)&#x27; onclick=&#x27;location.reload()&#x27;)</span><br><span class="line">span(style=&#x27;color: #fff;text-decoration: underline;cursor: pointer;&#x27;) 🍗 点击食用 🍔</span><br><span class="line">script.</span><br><span class="line">if (&#x27;serviceWorker&#x27; in navigator) &#123;</span><br><span class="line">if (navigator.serviceWorker.controller) &#123;</span><br><span class="line">navigator.serviceWorker.addEventListener(&#x27;controllerchange&#x27;, function() &#123;</span><br><span class="line">showNotification()</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">window.addEventListener(&#x27;load&#x27;, function() &#123;</span><br><span class="line">navigator.serviceWorker.register(&#x27;/sw.js&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">function showNotification() &#123;</span><br><span class="line">if (GLOBAL_CONFIG.Snackbar) &#123;</span><br><span class="line">var snackbarBg =</span><br><span class="line">document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ?</span><br><span class="line">GLOBAL_CONFIG.Snackbar.bgLight :</span><br><span class="line">GLOBAL_CONFIG.Snackbar.bgDark</span><br><span class="line">var snackbarPos = GLOBAL_CONFIG.Snackbar.position</span><br><span class="line">Snackbar.show(&#123;</span><br><span class="line">text: &#x27;✨ 有新文章啦！ 👉&#x27;,</span><br><span class="line">backgroundColor: snackbarBg,</span><br><span class="line">duration: 500000,</span><br><span class="line">pos: snackbarPos,</span><br><span class="line">actionText: &#x27;🍗 点击食用 🍔&#x27;,</span><br><span class="line">actionTextColor: &#x27;#fff&#x27;,</span><br><span class="line">onActionClick: function(e) &#123;</span><br><span class="line">location.reload()</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">var showBg =</span><br><span class="line">document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ?</span><br><span class="line">&#x27;#5CA1FF&#x27; :</span><br><span class="line">&#x27;#1f1f1f&#x27;</span><br><span class="line">var cssText = `top: 0; background: $&#123;showBg&#125;;`</span><br><span class="line">document.getElementById(&#x27;app-refresh&#x27;).style.cssText = cssText</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改[Blogroot]\themes\butterfly\layout\includes\additional-js.pug,在文件底部添加以下内容，注意缩进。butterfly_v3.6.0 取消了缓存配置，转为完全默认，需要将{cache:theme.fragment_cache}改为{cache: true}:（pug 是严格缩进模式！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if theme.pwa.enable</span><br><span class="line">!=partial(&#x27;includes/third-party/pwanotice&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将你的图标包移入相应的目录，例如我是&#x2F;img&#x2F;siteicon&#x2F;，所以放到[Blogroot]&#x2F;source&#x2F;img&#x2F;siteicon&#x2F;目录下。新建文件名为 manifest.json 并将其放到[Blogroot]&#x2F;source 目录下，此时还不能直接用，需要添加一些内容，以下是我的 manifest.json 配置内容，权且作为参考，其中的 theme_color 建议用取色器取设计的图标的主色调，同时务必配置 start_url 和 name 的配置项，这关系到你之后能否看到浏览器的应用安装按钮。（<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a> 阿里巴巴矢量图标库，可以设置站点图标）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;name&quot;: &quot;欢迎来到 兜 叽 咕 の 小 小 世 界&quot;,</span><br><span class="line">&quot;short_name&quot;: &quot;兜叽咕&quot;,</span><br><span class="line">&quot;theme_color&quot;: &quot;#5CA1FF&quot;,</span><br><span class="line">&quot;background_color&quot;: &quot;#5CA1FF&quot;,</span><br><span class="line">&quot;display&quot;: &quot;standalone&quot;,</span><br><span class="line">&quot;scope&quot;: &quot;/&quot;,</span><br><span class="line">&quot;start_url&quot;: &quot;/&quot;,</span><br><span class="line">&quot;icons&quot;: [&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/16.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;16x16&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/32.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;32x32&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/48.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;48x48&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/64.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;64x64&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/128.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;128x128&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/144.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;144x144&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/512.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;512x512&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;splash_pages&quot;: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打开主题配置文件[Blogroot]&#x2F;_config.butterfly.yml,找到 PWA 配置项。添加图标路径。这里的 theme_color 建议改成你图标的主色调，包括 manifest.json 中的 theme_color 也是如此。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pwa:</span><br><span class="line">enable: true</span><br><span class="line">manifest: /manifest.json</span><br><span class="line">theme_color: &#x27;#5CA1FF&#x27;</span><br><span class="line">apple_touch_icon: /img/siteicon/128.png</span><br><span class="line">favicon_32_32: /img/siteicon/32.png</span><br><span class="line">favicon_16_16: /img/siteicon/16.png</span><br><span class="line">mask_icon: /img/siteicon/128.png</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>终端输入 gulp 进行压缩<br>hexo 三件套（本地看不到 pwa，运行 hexo g 之后必须运行 gulp 指令，不然 PWA 不会生效！ <a href="https://akilar.top/posts/8f31c3d0/%EF%BC%89">https://akilar.top/posts/8f31c3d0/）</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo d 直接部署</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="六、配置自定义-css（一图流）"><a href="#六、配置自定义-css（一图流）" class="headerlink" title="六、配置自定义 css（一图流）"></a>六、配置自定义 css（一图流）</h2><h2 id="七、标签外挂"><a href="#七、标签外挂" class="headerlink" title="七、标签外挂"></a>七、标签外挂</h2><h2 id="八、hexo-完成-github-action-自动部署"><a href="#八、hexo-完成-github-action-自动部署" class="headerlink" title="八、hexo 完成 github action 自动部署"></a>八、hexo 完成 github action 自动部署</h2><h2 id="九、图床"><a href="#九、图床" class="headerlink" title="九、图床"></a>九、图床</h2><h2 id="十、自定义域名"><a href="#十、自定义域名" class="headerlink" title="十、自定义域名"></a>十、自定义域名</h2><h1 id="本篇未完结，后续还会慢慢更新、修订……"><a href="#本篇未完结，后续还会慢慢更新、修订……" class="headerlink" title="本篇未完结，后续还会慢慢更新、修订……"></a>本篇未完结，后续还会慢慢更新、修订……</h1><h1 id="码农日记"><a href="#码农日记" class="headerlink" title="码农日记"></a>码农日记</h1><h3 id="1-冲冲冲！ヾ-•ω•-96-o"><a href="#1-冲冲冲！ヾ-•ω•-96-o" class="headerlink" title="1.冲冲冲！ヾ(•ω•&#96;)o"></a>1.冲冲冲！ヾ(•ω•&#96;)o</h3>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
