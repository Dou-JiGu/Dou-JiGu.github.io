<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>兜 叽 咕 の 小 小 世 界</title>
  
  <subtitle>兜叽咕の博客</subtitle>
  <link href="https://wowowo.top/atom.xml" rel="self"/>
  
  <link href="https://wowowo.top/"/>
  <updated>2025-03-14T11:04:35.709Z</updated>
  <id>https://wowowo.top/</id>
  
  <author>
    <name>兜叽咕</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EIP学习笔记</title>
    <link href="https://wowowo.top/posts/249a.html"/>
    <id>https://wowowo.top/posts/249a.html</id>
    <published>2022-10-19T02:10:04.000Z</published>
    <updated>2025-03-14T11:04:35.709Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EIP"><a href="#EIP" class="headerlink" title="EIP"></a>EIP</h1><h1 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h1><h2 id="TortoiseSVN-使用简介"><a href="#TortoiseSVN-使用简介" class="headerlink" title="TortoiseSVN 使用简介"></a>TortoiseSVN 使用简介</h2><p>SVN 是一个开源的版本控制系统，采用分支管理系统（我之前用的 gitee 是差不多的），是 Windows shell 的扩展，最重要的是它可以免费的使用！（白嫖就是香~）</p>]]></content>
    
    
    <summary type="html">关于EIP的学习~</summary>
    
    
    
    <category term="版本控制系统" scheme="https://wowowo.top/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="EIP" scheme="https://wowowo.top/tags/EIP/"/>
    
  </entry>
  
  <entry>
    <title>SVN学习笔记</title>
    <link href="https://wowowo.top/posts/eb3a.html"/>
    <id>https://wowowo.top/posts/eb3a.html</id>
    <published>2022-09-16T00:30:00.000Z</published>
    <updated>2025-02-25T04:55:23.744Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h1><h2 id="TortoiseSVN-使用简介"><a href="#TortoiseSVN-使用简介" class="headerlink" title="TortoiseSVN 使用简介"></a>TortoiseSVN 使用简介</h2><p>SVN 是一个开源的版本控制系统，采用分支管理系统（我之前用的 gitee 是差不多的），是 Windows shell 的扩展，最重要的是它可以免费的使用！（白嫖就是香~）</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li>安装及下载 client 端</li><li>什么是 SVN(Subversion)</li><li>为甚么要用 SVN?</li><li>怎么样在 Windows 下面建立 SVN Repository？</li><li>建立一个 Working 目录</li><li>新增档案及目录到 Repository 中</li><li>更新档案及目录</li><li>更新至特定版本</li><li>复制档案及目录</li><li>制作 Tag 或是 Release</li><li>快速参考<br>取得(Checkout)Repository<br>更新(Update)档案或目录<br>新增(Add)档案或目录<br>提交(Commit)修改过的档案或目录<br>Copy&#x2F;Tag&#x2F;Branch&#x2F;Release 档案或目录</li></ol><h2 id="安装及下载-client-端"><a href="#安装及下载-client-端" class="headerlink" title="安装及下载 client 端"></a>安装及下载 client 端</h2><ol><li><p>下载 Windows 端程序：<a href="http://tortoisesvn.net/downloads%E3%80%82%E4%B8%80%E8%88%AC%E8%80%8C%E8%A8%80%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF32-bit%E7%9A%84Windows">http://tortoisesvn.net/downloads。一般而言，如果是32-bit的Windows</a> XP 应该使用 TortoiseSVN-1.4.x.xxxx-win32-svn-1.4.x.msi 这个档案。如果是 64-bit 的操作系统，则应该使用 TortoiseSVN-1.4.x.xxxx-x64-svn-1.4.x.msi 这个档案</p></li><li><p>执行下载回来的 TortoiseSVN 安装程序，就会进行 TortoiseSVN 的安装。正确安装后，应该进行一次的重开机，以确保 TortoiseSVN 的正确无误</p></li><li><p>安装成功后，在档案管理员内按下鼠标右键，应该可以看到如右图所示：</p></li></ol><blockquote><p>大部分的 TortoiseSVN 的操作都是透过档案管理员及鼠标右键就可以完成了。如果您之前使用过 TortoiseCVS，应该会对这种操作方式感到十分亲切。</p></blockquote><h2 id="什么是-SVN-Subversion"><a href="#什么是-SVN-Subversion" class="headerlink" title="什么是 SVN(Subversion)?"></a>什么是 SVN(Subversion)?</h2><p>有一个简单但不十分精确比喻： SVN &#x3D; 版本控制 + 备份服务器<br>简单的说，您可以把 SVN 当成您的备份服务器，更好的是，他可以帮您记住每次上传到这个服务器的档案内容。并且自动的赋予每次的变更一个版本。<br>通常，我们称用来存放上传档案的地方就做 Repository。用中文来说，有点像是档案仓库的意思。不过，通常我们还是使用 Repository 这个名词。基本上，第一次我们需要有一个新增(add)档案的动作，将想要备份的档案放到 Repository 上面。日后，当您有任何修改时，都可以上传到 Repository 上面，上传已经存在且修改过的档案就叫做 commit，也就是提交修改给 SVN server 的意思。针对每次的 commit，SVN server 都会赋予他一个新的版本。同时，也会把每次上传的时间记录下来。日后，因为某些因素，如果您需要从 Repository 下载曾经提交的档案。您可以直接选择取得最新的版本，也可以取得任何一个之前的版本。如果忘记了版本，还是可以靠记忆尝试取得某个日期的版本。<br>为甚么要用 SVN?</p><ol><li>备份工作档案是十分重要的。您永远不知道计算机上的硬盘何时会坏掉。根据经验法则再加上摩菲定理，坏事情往往都发生在最重要的时刻。例如，要 release 东西的前一刻，硬盘完全坏掉，无法修复。所以，常常备份工作数据是非常重要的。大部分公司的 server 都会有专门的备份机制，甚至是异地备援。绝对比放在自己的计算机里头，或是随身碟上面来的安全。</li><li>版本控管非常重要。您无法保证手头上最新版本永远都是对的。很多时候，在经过数天努力工作后，您才发现走错方向。需要将所有的修改回复到数天前版本。没有几个人能够完全记住自己修改过什么东西。如果没有做好版本控管，那么，最差的状况就是要全部重来。</li><li>伙伴间的数据同步也是非常重要的。很多时候，除了您个人外，还有其它的伙伴也需要您的档案。怎么把最新的档案提供给伙伴呢？用 e-mail？根据经验，用 e-mail 是一个很差的办法。到了最后，根本就不知道哪一封 e-mail 才是新的。因为可能您最新的 e-mail 已经被当成垃圾信给丢了。别忘了，现在很多 e-mail 软件都有 anti-spam 的功能，说不定这些信件都被当成广告信给处理掉了。而且，您也应该知道一般档案如果放在 e-mail 内，档案大小会变得比较大（通常是原来的 4&#x2F;3 倍以上）。如果每天更新一次，恐怕几天没收信的话，信箱就爆了！</li><li>如果没有一个好的办法，备份不同版本是很耗费硬盘空间的。例如：您有一个总共 10MB 的目录，使用单纯的档案备份。如果有 10 个版本就会变成 100MB。20 个版本就有 200MB。如果，不想备份这么多版本，势必就是要减少备份的次数。拉长备份周期将会导致数据遗失的危险性增高。把旧的不需要的备份删除？根据经验，只要时间一拉长，您跟本就不知道一个月以前的版本是重要或者是不重要</li></ol><p>SVN 能帮我们解决上面的问题吗？答案是肯定的：</p><ol><li>SVN Repository 可以是自己计算机上的一个目录，或者是随身碟（不建议这样用）。当然也可以是公司的服务器</li><li>SVN 有很棒的版本控管机制。所有上传的版本都会帮您记录下来。日后您可以随时取得某一个时刻的版本。而且，也有版本分支及合并等好用的功能</li><li>SVN 可以让不同的开发者存取同样的档案，并且利用 SVN Server 作为档案同步的机制。也就是说，您有档案更新时，无须将档案寄给您的开发成员。只需要告诉他新的版本已经在 SVN Server 上面，请他自己去 SVN Server 上面就可以取得最新版本。而且，SVN Server 也可以做到当您上传新版本后，自动发信给相关的成员</li><li>SVN 的存放档案方式是采用差异备份的方式。也就是说，他只会备份有不同的地方。所以很省硬盘空间。此外，他也可以针对所谓的非文字文件进行差异备份</li></ol><p>怎么样在 Windows 下面建立 SVN Repository？<br>假设您已经安装前面所提及的 TortoiseSVN 这套软件，现在我们先告诉您如何用自己的硬盘或是随身碟当作 SVN Repository 的存放地点。如果您只想知道如何存取一个已经建立好的 SVN Server 上面的 Repository，请直接跳过本节。<br>假设您的要放置 Repository 的地方是 E 槽。您需要先建立一个空的目录。以下面的例子而言，我们在 E 槽下面建立了一个名为 svn_repo 的目录。SVN 并没有限定 Repository 目录名称。您可以建立任何您自己喜欢的名称。但是，强烈建议勿使用非英文的档名(如中文或日文)。<br>透过您的档案管理员，在 E:\svn_repo 的 Icon 上面，按下鼠标右键后，选择 TortoiseSVN-&gt;Create repository here</p><p>接着，您会看到一个窗口，这个窗口主要是问您，您希望使用的 Repository 数据库格式是 FSFS 还是 BDB。基本上，请选择 FSFS 就可以了。按下 OK 按钮后，您将可以看到下一个画面</p><p>这就表示您的 SVN repository 已经成功的建立了。接下来就是要把您的档案备份进来。日后，只要需要使用这个 repository，我们就可以使用 file:&#x2F;&#x2F;&#x2F;E:&#x2F;SVN_REPO 表示它。SVN 就是透过这种 URL 的方式到如何与 Repository 取得联系。各种 URL 的格式如下：<br>file:&#x2F;&#x2F;&#x2F;磁盘驱动器|&#x2F;repository 所在目录&#x2F;子目录<br>http:&#x2F;&#x2F;账号@服务器名称&#x2F; repository 所在目录&#x2F;子目录<br>https:&#x2F;&#x2F;账号@服务器名称&#x2F; repository 所在目录&#x2F;子目录<br>svn+ssh:&#x2F;&#x2F;账号@服务器名称&#x2F; repository 所在目录&#x2F;子目录<br>其中，http 表示使用一般的超文字传输通讯协议。https 表示使用加密的超文字传输通讯协议。svn+ssh 表示透过 SSH 加密通讯的管道，进行存取</p><p>建立一个 Working 目录<br>所谓的 Working 目录其实就是您平常用来存放工作档案的地方。通常我们会等到自己的工作做的一个段落的时候再进行备份。所以我们平常都是在 Working 目录下面工作，等到适当时机在 commit 到 repository 中。举例来说，我们想在 D 盘下面建立一个名为 working 的目录。首先先把这个目录建立出来</p><p>此时，这个目录应该为空的。<br>在档案管理员中按下右键后(您可以在 working 目录的 icon 上按，也可进入 working 目录后，在空白的地方按)，选择 SVN checkout</p><p>接着您可以看到如下的画面：</p><p>首先我们要填入的是 repository 的位置，对于 SVN 来说，repository 的位置都是 URL。由于我们前面已经在 E 槽建立一个 repository，因此，我们现在要在 URL of repository 这一栏填入 file:&#x2F;&#x2F;&#x2F;E:&#x2F;svn_repo&#x2F;。<br>接着，稍微看一下 Checkout directory，这个字段应该要指向您的 working 目录。确认后，按下 OK 按钮，您应该可以看到如下的讯息窗口</p><p>这样就表示动作完成。按下 OK 按钮后，再到您刚刚建立的目录下。您将会看到 working 目录下面多了一个名为.svn 的目录(这个目录是隐藏的，如果您的档案管理员没有设定可以看到隐藏目录，您将无法看到它)</p><p>SVN 会在您的工作目录下，以及其子目录下建立这个.svn 的子目录。您不应该进去这个目录，尤其不应该更动这个目录下面的任何内容。否则会很可能会造成 SVN 无法正常运作。<br>由于，原来的 repository 是空的，所以我们现在的 working 目录也是空的。如果您现在 checkout 的是一个已经有内容的 repository，您将会看到 working 目录下面现在多了许多目录及档案。<br>如果您要在一个已经存在的 SVN Server 上面 checkout 出上面的档案，您只需要给定正确的 URL 以及 working 目录的名称。就可以取得指定的档案及目录了</p><p>新增档案及目录到 Repository 中<br>假设您前面的动作都无误。现在您开始开发一个新的程序。假设您开发的程序将放在前面建立的 working 目录下面的 my_ prj 子目录。如下所示：</p><p>假设您已经编辑好档案，准备把他们放到 SVN 的 repository 中。您需要在 my_prj 目录的 icon 上面，按鼠标右键，并且选择 TortoiseSVN-&gt;Add：</p><p>接着，TortoiseSVN 会把准备要加入的档案及目录，显示给您看。打勾的就是等下要被加入到 Repository 中的。如果您有某些档案或是目录不想在这次加入，您可以让该项目不要被勾选。如此，它就不会被加入到 Repository 去。</p><p>按下 OK 后，您将会看到如下的讯息窗口：</p><p>这样就表示成功了。有一点要注意的是，这个 Add 的动作并未真正的将档案放到 Repository 中。仅仅是告知 SVN 准备要在 Repository 中放入这些档案。此时，如果您透过档案管理员查看这些档案，应该会看到一个白色红底的惊叹号在档案 icon 的下方。</p><p>这是表示您的 working 目录中的档案与 Repository 中的档案还没有同步。现在我们要多一个 commit 的动作。让这些档案真正的放入到 Repository 中。您可以在 my_prj 目录的 icon 上或者是 my_prj 目录内的空白处按下鼠标右键，叫出如下的选单，并且选择 SVN commit。</p><p>紧接着，您将会看到如下的窗口出现：</p><p>在这个窗口中，下半部会列出一个清单，让您清楚的了解到哪些档案要被 commit 到 repository 中。同样的，如果您有档案不想在这个时候 commit 到 Repository，您可以取消选取的档案，这样他们就不会被 commit 到 Repository 中。<br>在档案列表的上方是 Message 栏，您可以在栏中输入本次 commit 的目的。这是十分重要的字段，当您 commit 的次数很多时，可以靠这个讯息知道版本与版本之间的差异。当您输入好 Message，按下 OK 之后，就可以看到如下的窗口出现，通知您已经将指定的档案送到 Repository 中。</p><p>您可以到先前的 folder 中，确定是否所有的档案 icon 都有如下的绿色勾勾在上面，这样代表您的档案都正确无误的到 repository 中。</p><p>有时候，因为 Windows 本身的问题，您可能会看到有些 icon 没有变成绿色的勾勾。此时，多按 F5 几次，应该就可以解决这个问题。如果，仍然不行，表示您之前的 commit 动作真的有问题。请仔细检查之前的 commit 动作是否正确。<br>更新档案及目录<br>为何需要更新？由于版本控制系统多半都是由许多人共同使用。所以，同样的档案可能还有人会去进行编辑。为了确保您工作目录中的档案与 Repository 中的档案是同步的。建议您在编辑前都先进行更新的动作。在此，我们都先假设您已经将档案 check out 过一次。现在要说明的是如何在一个 check out 过的目录进行 update。在想要更新的档案或目录 icon 上面按下鼠标右键。并且选择 SVN Update。</p><p>正常的状况下，您可以看到如上的窗口。在这个窗口中会显示有哪些文件更新了。如果没有看到档案更新的相关信息，这表示您的目录中的档案已经是最新的，所以无须进行更新。<br>更新至特定版本<br>有时我们需要回溯至特定的日期或是版本，这时就可以利用 SVN 的 Update to revision 的功能。在想要更新的档案或目录 icon 上面按下鼠标右键。并且选择 TortoiseSVN-&gt;Update to revision。</p><p>在这个 Update 窗口中，您可以选择更新到最新版本(HEAD)。也可以选择更新到某个指定的版本(Revision)。当然，您可能早就记不起来正确的版本号码。可能只隐约的记得大概在什么时间。没关系，按下 Show log 按钮，您就可以回顾历史了。</p><p>所有您曾经做过的动作，及其日期与对应的版本都会列在这个窗口上面，只要在你想要的版上面点一下，让他变成反白，然后按下 OK。这个版本就会自动填入 Update 窗口中的 Revision 字段中。您只要再按下一次 OK，这个版本就会被取出来到您的硬盘中。</p><p>复制档案及目录<br>很多时候您会希望有另外一个复制的目录来进行新的编修。等到确定这个分支的修改已经完毕了，再合并到原来的主要开发版本上。举例来说，我们目前在 working copy 下面有如下的目录及档案：</p><p>现在，我们要为 trunk 这个目录建立一个 branch。假设我们希望这个目录是在 D:\working\my_prj\branch\my_new_branch_for_testing。首先我们可以在 trunk 目录下面的空白处，或是直接在 trunk 的 icon 下面按下鼠标右键。</p><p>在选择 Branch&#x2F;Tag…这个项目后，您将会看到如下的对话框出现。</p><p>请先确认 From WC at URL: 中的目录是您要复制的来源目录。接着，在 To URL 中输入您要复制过去的路径。通常我们会将所有的 branch 集中在一个目录下面。以上面的例子来说，branch 档案都会集中在 branch 的子目录下面。在 To URL 中您只需要输入您要的目录即可。目录不存在时，会由 SVN 帮您建立。特别需要注意的是 SVN 因为斜线作为目录分隔字符，而非反斜线。<br>接着在 Log message 输入您此次 branch 的目的为何。按下 OK 就可以了。<br>如果成功，将可以看到下面的画面：</p><p>按下 OK 就可以关闭这个窗口了。如果您此时立刻去 working copy 的 branch 子目录下面，您将会失望的发现在该目录下面并没有刚刚指定的目录存在。这是因为您 working copy 的部份还是旧的，您只需要在 branch 子目录下面进行 SVN update 就可以看到这个新增的目录了。新增的目录就与原来的目录无关了。您可以任意对他进行编辑，一直到您确认好所有在 branch 下面该做的工作都完成后，您可以选择将这个 branch merge 回原来的 trunk 目录，或者是保留它在 branch 中。<br>要 merge 回 trunk 目录中，方法很简单。以上面的例子来说，我们在 D:\working\my_prj\trunk 目录空白处，按下鼠标右键，选择 Merge:</p><p>接着可以看到如下的画面：</p><p>这个画面主要分为三个部份，前面的 From: 与 To: 是要问您打算从 Branch 中的哪个版本到哪个版本，merge 回原来的 trunk 目录中。因此，From 跟 To 的 URL 字段应当都是指定原来 branch 的目录下。剩下的就是指定要 merge 的 revision 范围。以上面的例子而言，我们从 Branch 的 Revision 7 开始 merge 到 Branch 下面的最新版本。您可以透过，Dry run 按钮，试作一次 Merge。这个 merge 只会显示一些讯息，不会真正的更新到 trunk 的目录去。只有按下 Merge 按钮后，才会真正的将 branch 的档案与 trunk 的档案合并起来。</p><p>上面的讯息告诉我们在 trunk 目录下面的 yyyy.cpp 及 xxx1.cpp 已经被更改过了。如果您在现在到 trunk 目录下，会看到这两个档案处于被修改的状态。</p><p>如果您确认这次的 merge 没有问题，您可以直接使用 commit 来将这两个被修改的档案 commit 回 SVN repository 上。如果有问题，您可以直接修改这两个档案，直到确认 ok 了，再行 commit。</p><p>一切顺利的话，您就成功的将 branch 的档案 merge 回 trunk 了。<br>制作 Tag 或是 Release<br>所谓的 Tag 或是 Release 就是一个特别的版本，因为这个版本可能有特别的意义。例如：这个版本是特别的 Milestone 或是 release 给客户的版本。其实，Tag 与 Release 的作法与 Branch 完全相同。只是 Branch 可能会需要 merge 回原来的 trunk 中，而 tag 及 release 大部分都不需要 merge 回 trunk 中。举例来说，今天我们的 trunk 做了一版，这个版本被认定是软件的 1.0 版。1.0 版对于开发来说是一个非常重要的里程碑。所以我们要特别为他做一个标记，亦即 Tag。假设，这个 1.0 版是要正式 release 给客户或是相关 vendor，我们要可以为他做一个 Release 的标记。基本上，SVN 只有目录的概念，并没有什么 Tag 的用法。所以您会看到再 SVN 的选单上面，Branch 与 Tag 是同一个项目。以这个 1.0 的例子来说，我们就是在 Trunk 上面，按下鼠标右键，选择 Branch&#x2F;Tag 的项目：</p><p>成功的话，您就在 Tag 目录下面建立了一个 1.0 的目录。当然，如果您这时到 Tag 的目录下面去，会看不到这个目录，您需要在 Tag 目录下面 update 一下，才能看到它</p><p>制作 Release 的作法与 Tag 完全相同。只是把 Tag 的目录换成 Release 而已<br>看到这里，相信大家都已经领悟到无论是 Branch，Tag 或是 Release 都只是将指定的 Trunk 版本复制一份到另外一个目录去。至于这个目录要叫 Branch 还是叫 Release，SVN 根本就不管。所以，您也可取其它的目录名称。不过，Branch，Tag 及 Release 已经是 SVN 上面约定成俗的名称。所以，除非您知道自己为何这样做，否则，最好还是 follow 这个命名原则，以免后面新加入的人看不懂<br>NOTE：同样的道理 Trunk 也只是一个约定成俗的名称。不一定要叫 Trunk。只是大家看到 Trunk 目录就会知道这里面放的是主要的开发主干<br>快速参考<br>前面写了不少废话，主要是给完全没有版本控制观念的人看的。如果你想直接知道某个功能如何使用，请看下面的章节<br>在后面的说明，皆以 d:\working 当作工作目录。您可以将他换成其它任何您想要的目录<br>取得(Checkout)Repository</p><ol><li>开启档案管理员，进入 d:</li><li>在档案管理员空白处按下鼠标右键，选择 SVN Checkout</li><li>在 Checkout 对话框中</li><li>URL of repository：repository 的位置</li><li>Checkout directory：要存放 working copy 的地方</li><li>若 d:\working 目录不存在，SVN 会问您要不要建立这个目录，请选择 Yes</li><li>接着按下 OK，即可 checkout 该目录</li></ol><p>更新(Update)档案或目录</p><ol><li>在您要由 repository 更新至 working copy 的档案或是目录的 icon 上面按下鼠标右键。选择 SVN Update 即可</li><li>如果是要更新至特定的版本，则选择 TortoiseSVN-&gt;Update to revision。并且在 Update 对话框中的 Revision 字段输入您要的版本。也可以透过 Show Log 按钮来查看版本的信息<br>新增(Add)档案或目录</li><li>在尚不属于 repository 的档案或目录的 icon 上按下鼠标右键。选择 TortoiseSVN-&gt;Add</li><li>选取要新增的档案</li><li>按下 OK</li></ol><p>NOTE：新增的档案要经过提交(Commit)的动作才回真正的放入 Repository 中<br>提交(Commit)修改过的档案或目录</p><ol><li>在修改过的档案，或是在整个目录的空白处按下鼠标右键</li><li>勾选真正要提交至 Repository 的档案或目录</li><li>输入本次提交的纪录讯息(Message)。这个讯息应该要清楚明了，但不应过份简单。以利日后版本追踪</li><li>按下 OK</li></ol><p>Copy&#x2F;Tag&#x2F;Branch&#x2F;Release 档案或目录</p><ol><li>确认您要处理的档案或是目录已经是 Repository 中最新的版本</li><li>在要处理的目录或是档案上面按下鼠标右键，选择 TortoiseSVN-&gt;Branch&#x2F;Tag</li><li>在 To URL 处输入您要的目的地</li><li>branch：要产生一个分支。以区别与 trunk 不同的开发</li><li>tag：要形成一个标记，表示重要的 milestone</li><li>release：表示一个已经正式的 release 的纪录</li><li>其它：进行一个复制(copy)</li></ol><h1 id="SVN-命令"><a href="#SVN-命令" class="headerlink" title="SVN 命令"></a>SVN 命令</h1><ol><li>svn checkout<br>将文件 checkout 到本地目录里</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn checkout &lt;path&gt; // path指的是服务器上的目录</span><br></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn co &lt;path&gt; // path是服务器上的目录</span><br></pre></td></tr></table></figure><ol start="2"><li>svn add<br>在版本库中添加新文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn add &lt;file&gt; // file指的是文件的路径</span><br></pre></td></tr></table></figure><ol start="3"><li>svn commit -m<br>将修改后的文件提交到版本库中</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn commit -m &quot;LogMessage&quot; [-N] [--no-unlock] &lt;path&gt; //如果选择了保持锁，就使用–no-unlock开关，LogMessage是需要提交的log，path是需要提交文件的路径</span><br></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn ci</span><br></pre></td></tr></table></figure><ol start="4"><li>svn lock -m<br>加锁</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn lock -m &quot;LockMessage&quot;  [--force] &lt;path&gt;  // 加锁</span><br></pre></td></tr></table></figure><p>解锁</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn unlock  &lt;path&gt;  // 解锁</span><br></pre></td></tr></table></figure><ol start="5"><li>svn update<br>更新到某个版本</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn update -r m &lt;path&gt; // -r是全部执行，m指的是版本号，path是更新的路径</span><br></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn up</span><br></pre></td></tr></table></figure><ol start="6"><li>svn status<br>查看文件或者目录状态</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn status &lt;path&gt; // 目录下的文件和子目录的状态，正常状态不显示</span><br></pre></td></tr></table></figure><p>显示文件和子目录的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn status -v &lt;path&gt; // 显示文件和子目录的状态。?：不在svn的控制中；M：内容被修改；C：发生冲突；A：预定加入到版本库；K：被锁定。第一列保持相同，第二列显示工作版本号，第三和第四列显示最后一次修改的版本号和修改人</span><br></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn st // svn status、svn diff和 svn revert这三条命令在没有网络的情况下也可以执行的，原因是svn在本地的.svn中保留了本地版本的原始拷贝</span><br></pre></td></tr></table></figure><ol start="7"><li>svn delete<br>删除文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn delete &lt;path&gt; -m &quot;delete test file&quot;</span><br></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn (del,remove,rm)</span><br></pre></td></tr></table></figure><ol start="8"><li>svn Log<br>查看日志</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn log &lt;path&gt;</span><br></pre></td></tr></table></figure><ol start="9"><li>svn info<br>查看文件详细信息</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn info &lt;path&gt;</span><br></pre></td></tr></table></figure><ol start="10"><li>svn diff<br>比较差异</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn diff &lt;path&gt;</span><br></pre></td></tr></table></figure><ol start="11"><li>svn merge<br>将两个版本之间的差异合并到当前文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn merge -r m:n &lt;path&gt; // m和n代表版本</span><br></pre></td></tr></table></figure><ol start="12"><li>svn help<br>SVN 帮助</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn help</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn help ci</span><br></pre></td></tr></table></figure><ol start="13"><li>svn list<br>版本库下的文件和目录列表</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn list &lt;path&gt; // 显示path目录下的所有属于版本库的文件和目录</span><br></pre></td></tr></table></figure><p>可简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn ls</span><br></pre></td></tr></table></figure><h1 id="本篇未完结，后续还会慢慢更新、修订……"><a href="#本篇未完结，后续还会慢慢更新、修订……" class="headerlink" title="本篇未完结，后续还会慢慢更新、修订……"></a>本篇未完结，后续还会慢慢更新、修订……</h1>]]></content>
    
    
    <summary type="html">关于SVN的学习~</summary>
    
    
    
    <category term="代码版本控制管理系统" scheme="https://wowowo.top/categories/%E4%BB%A3%E7%A0%81%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="SVN" scheme="https://wowowo.top/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>新的旅程</title>
    <link href="https://wowowo.top/posts/c309.html"/>
    <id>https://wowowo.top/posts/c309.html</id>
    <published>2022-09-01T00:30:00.000Z</published>
    <updated>2022-10-18T06:20:23.586Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022-9-1-天气晴-风和日丽"><a href="#2022-9-1-天气晴-风和日丽" class="headerlink" title="2022.9.1 天气晴 风和日丽"></a>2022.9.1 天气晴 风和日丽</h1><p>哈哈哈，今天是去公司上班的第一天，心里还有点小紧张！作为初入职场的新人，我的内心既兴奋又紧张，进了公司之后发现大家都很好相处，而且都很幽默有趣！nice！我旁边的小姐姐人好好！还有负责带我的主管大佬人也好好！HR 小姐姐也超可爱的！嘿嘿，希望自己也能更加努力，未来努力成为像他们一样的大佬！╰(<em>°▽°</em>)╯</p><p><img src="/posts/c309/excite.gif"></p><h1 id="2022……"><a href="#2022……" class="headerlink" title="2022……"></a>2022……</h1><p>一直处于隔离的生活 ing……(╥﹏╥)</p><h1 id="2022-9-16-天气晴-晴空朗朗"><a href="#2022-9-16-天气晴-晴空朗朗" class="headerlink" title="2022.9.16 天气晴 晴空朗朗"></a>2022.9.16 天气晴 晴空朗朗</h1><p>今天终于解封来上班啦，今天项目主管大佬带我了解了公司的大体结构，公司有行政部（负责合同之类的）、销售部（负责向客户推销项目）、交付部（负责项目的开发与部署以及维护），我属于交付部下的开发部，交付部下有实施部、开发部、研发部……知道了我们公司是负责做 mcc（电机控制中心）+wms（仓储）的项目（下面会衍生很多其他的一些类似子系统比如数据采集器等，可以通过报表、看板（公司自主研发）来查看合格&#x2F;不合格的产品），我们属于出售我们所做的项目，由研发部开发一个公共框架（其中还有测试组，负责代码测试），由开发部进行二开（针对客户的需求进行功能的增减），再由实施部负责项目交付售后工作（到客户那边常驻，当出现问题时，为客户解决问题），作为初入职场的新人，受益匪浅！感觉就是自己真的好幸运！嘿嘿( •̀ ω •́ )✧</p><p><img src="/posts/c309/%E5%A8%87%E7%BE%9E%E4%B8%80%E7%AC%91.jpeg"></p><h1 id="2022-9-17-天气晴-多云"><a href="#2022-9-17-天气晴-多云" class="headerlink" title="2022.9.17 天气晴 多云"></a>2022.9.17 天气晴 多云</h1><p>今天部门组织部门聚餐，吃到了好多好吃的，也认识了好多部门里面的大佬！ヽ(✿ ﾟ ▽ ﾟ)ノヽ(✿ ﾟ ▽ ﾟ)ノ ♪(´▽ ｀)</p><h1 id="2022-9-19-天气晴-万里无云"><a href="#2022-9-19-天气晴-万里无云" class="headerlink" title="2022.9.19 天气晴 万里无云"></a>2022.9.19 天气晴 万里无云</h1><p>今天跟着项目团队去出差了，看到了好多区间生产设备，还看到一只可爱的智能机器人，观摩了一波生产区间作业流程，参观了芯片生产车间，长见识了，车间很大，芯片制造机器很赞！感觉涨知识了~(๑•̀ㅂ•́)و✧</p><h1 id="2022-9-29-天气晴-晴空万里"><a href="#2022-9-29-天气晴-晴空万里" class="headerlink" title="2022.9.29 天气晴 晴空万里"></a>2022.9.29 天气晴 晴空万里</h1><p>今天公司组织团建聚餐，大家都特别开心哈哈哈，虽然俺有一丢丢社恐了，但是吃到了好多好吃的，还接触到了一些技术大佬，在聚会上，大家一起做游戏玩你画我猜，玩得很开森！哈哈哈哈~\ (≧▽≦) &#x2F;<br><img src="/posts/c309/%E6%B4%BE%E5%A4%A7%E6%98%9F.webp"></p>]]></content>
    
    
    <summary type="html">分享实习生活的日常~</summary>
    
    
    
    <category term="码农日志" scheme="https://wowowo.top/categories/%E7%A0%81%E5%86%9C%E6%97%A5%E5%BF%97/"/>
    
    
    <category term="码农日志" scheme="https://wowowo.top/tags/%E7%A0%81%E5%86%9C%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Hexo食用教程</title>
    <link href="https://wowowo.top/posts/95ae.html"/>
    <id>https://wowowo.top/posts/95ae.html</id>
    <published>2022-08-30T16:03:22.000Z</published>
    <updated>2022-10-18T06:59:50.441Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h1><h2 id="我の碎碎念"><a href="#我の碎碎念" class="headerlink" title="我の碎碎念"></a>我の碎碎念</h2><p>哈哈哈，终于搭建好自己的博客啦！当时看到人家的博客做的好好看，所以自己也忍不住想入手了~那么第一篇博客就纪录关于我搭建博客所使用的框架 —— Hexo（开源的静态博客生成器），方便以后有需要重新搭建框架的时候使用，从零开始的 Hexo 搭建教程！( •̀ ω •́ )y</p><h2 id="Hexo-框架介绍"><a href="#Hexo-框架介绍" class="headerlink" title="Hexo 框架介绍"></a>Hexo 框架介绍</h2><p>Hexo 是一个快速、简洁且高效的博客框架，我理解就是专门为写博客而诞生的。Hexo 支持使用 Markdown 来解析文章，是可以去主题官网选择好看的主题，并且能魔改主题文件生成个性化的静态网页，然后一键部署到网站上，制作出可以和大家一起分享技术、心得、生活等的个人博客网站 ~（我现在使用的是框架 Hexo +主题 Butterfly）</p><h2 id="安装-Hexo-前提"><a href="#安装-Hexo-前提" class="headerlink" title="安装 Hexo 前提"></a>安装 Hexo 前提</h2><p>安装 Hexo 首先有个前提，就是你得先安装好 Node.js 以及 Git，并且 Node.js 的版本不能低于 10.13（官方建议使用 12.0 及以上版本），还没安装的铁铁，可以先去下载一下 Node.js 以及 Git，安装了的铁铁可以继续往下看安装 Hexo 步骤啦~</p><h2 id="切换淘宝镜像"><a href="#切换淘宝镜像" class="headerlink" title="切换淘宝镜像"></a>切换淘宝镜像</h2><p>由于 node 安装插件是从国外服务器下载，受网络影响大，速度慢且可能出现异常。所以如果 npm 的服务器在中国就好了，所以淘宝团队（阿里巴巴旗下业务阿里云）干了这事，让我们可以使用阿里布置在国内的服务器来进行 node 安装，使下载速度更快些</p><ol><li>切换淘宝镜像：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><ol start="2"><li>切回源：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org/）</span><br></pre></td></tr></table></figure><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>首先，选择你想要存放笔记的地方，新建一个文件夹，然后在你新建笔记文件夹的目录下右击选择 Git Bash Here</p><h2 id="全局安装-Hexo-脚手架工具"><a href="#全局安装-Hexo-脚手架工具" class="headerlink" title="全局安装 Hexo 脚手架工具"></a>全局安装 Hexo 脚手架工具</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h2><p>这里才是 Hexo 框架的搭建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h2 id="下载-pug-以及-stylus-的渲染器"><a href="#下载-pug-以及-stylus-的渲染器" class="headerlink" title="下载 pug 以及 stylus 的渲染器"></a>下载 pug 以及 stylus 的渲染器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="下载-Git-连接远程仓库"><a href="#下载-Git-连接远程仓库" class="headerlink" title="下载 Git 连接远程仓库"></a>下载 Git 连接远程仓库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="Hexo-三件套"><a href="#Hexo-三件套" class="headerlink" title="Hexo 三件套"></a>Hexo 三件套</h2><ol start="0"><li>查看 hexo 版本</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -version</span><br></pre></td></tr></table></figure><ol><li>清空已有 hexo 网站文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><ol start="2"><li>依据网页文本与新的 CSS 样式生成新网站文件（source 这个文件会在 hexo g 打包时打包到 public 中）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ol start="3"><li>启动本地服务器，可以在 localhost:4000 查看网站修改效果</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="从-GitHub-仓库下载目标：Butterfly-主题"><a href="#从-GitHub-仓库下载目标：Butterfly-主题" class="headerlink" title="从 GitHub 仓库下载目标：Butterfly 主题"></a>从 GitHub 仓库下载目标：Butterfly 主题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h2 id="Hexo-三件套-1"><a href="#Hexo-三件套-1" class="headerlink" title="Hexo 三件套"></a>Hexo 三件套</h2><ol><li>清除缓存</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure><ol start="2"><li>提交到本地</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ol start="3"><li>运行 Hexo 跑起来，查看效果</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="个性化配置自己的-Hexo"><a href="#个性化配置自己的-Hexo" class="headerlink" title="个性化配置自己的 Hexo"></a>个性化配置自己的 Hexo</h2><ol><li>配置文章链接转数字或字母：<a href="https://github.com/rozbo/hexo-abbrlink">https://github.com/rozbo/hexo-abbrlink</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><ol start="2"><li>进入根目录中配置\ _config.yml，替换 permalink</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html</span><br></pre></td></tr></table></figure><ol start="3"><li>进入根目录中配置\ _config.yml，修改语言 language</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h2 id="一、配置插件"><a href="#一、配置插件" class="headerlink" title="一、配置插件"></a>一、配置插件</h2><ol><li>配置文章链接转数字或字母<br>复制 github 文档配置文章链接转数字或字母所需的配置到根目录中配置\ _config.yml 中最底下</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">alg: crc32 #support crc16(default) and crc32</span><br><span class="line">rep: hex #support dec(default) and hex</span><br></pre></td></tr></table></figure><ol start="2"><li>本地搜索<br>到根目录中配置\ _config.yml 中最底下添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">path: search.xml</span><br><span class="line">field: all</span><br><span class="line">content: true</span><br></pre></td></tr></table></figure><h2 id="在根目录创建-config-butterfly-yml-文件，复制-themes-x2F-butterfly-x2F-config-yml-内容到根目录-config-butterfly-yml-中"><a href="#在根目录创建-config-butterfly-yml-文件，复制-themes-x2F-butterfly-x2F-config-yml-内容到根目录-config-butterfly-yml-中" class="headerlink" title="在根目录创建\ _config.butterfly.yml 文件，复制 themes&#x2F;butterfly&#x2F;_config.yml 内容到根目录_config.butterfly.yml 中"></a>在根目录创建\ _config.butterfly.yml 文件，复制 themes&#x2F;butterfly&#x2F;_config.yml 内容到根目录_config.butterfly.yml 中</h2><h2 id="在-config-butterfly-yml-中搜索-local-search-替换"><a href="#在-config-butterfly-yml-中搜索-local-search-替换" class="headerlink" title="在\ _config.butterfly.yml 中搜索 local_search 替换"></a>在\ _config.butterfly.yml 中搜索 local_search 替换</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">enable: true</span><br><span class="line">preload: false</span><br><span class="line">CDN:</span><br></pre></td></tr></table></figure><h2 id="二、个性化个人主页资料"><a href="#二、个性化个人主页资料" class="headerlink" title="二、个性化个人主页资料"></a>二、个性化个人主页资料</h2><p>在根目录\ _config.yml 中<br>例如我的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 兜 叽 咕 の 小 小 世 界 # 封面显示标题</span><br><span class="line">subtitle: &#x27;兜叽咕の博客&#x27;</span><br><span class="line">description: &#x27;老骥伏枥，志在千里。&#x27; # 描述站点</span><br><span class="line">keywords: &#x27;兜叽咕,IT,分享,日常,浪漫 de 唯物主义&#x27; # 关键词，搜索时可检索到你的博客（可写 150 字左右）</span><br><span class="line">author: 兜叽咕 # 作者</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure><p>因为我们修改的是配置文件需要重新运行，修改文章之类就不用重启（终止进程，hexo 三件套重跑一遍）</p><h2 id="三、将博客部署到网站上"><a href="#三、将博客部署到网站上" class="headerlink" title="三、将博客部署到网站上"></a>三、将博客部署到网站上</h2><ol><li>注册登录 github</li><li>创建仓库（严格命名：你的用户名.github.io）</li><li>配置 ssh（因为我自己配置过，所以大家可以去看大佬的教程）</li><li>配置完 ssh，就可以得到 ssh 地址，将 ssh 地址复制到根目录中配置_config.yml 中 deploy（替换）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   deploy:</span><br><span class="line"></span><br><span class="line">- type: git</span><br><span class="line">  repository: git@github.com:Dou-JiGu/Dou-JiGu.github.io.git # ssh 地址</span><br><span class="line">  branch: main # 分支</span><br></pre></td></tr></table></figure><h2 id="hexo-三件套"><a href="#hexo-三件套" class="headerlink" title="hexo 三件套"></a>hexo 三件套</h2><p>最后一步换为 hexo d 提交，也可以使用联合命令，然后就可以登录 github 到你的仓库（你的用户名.github.io 仓库）查看你上传的文件</p><h2 id="访问博客"><a href="#访问博客" class="headerlink" title="访问博客"></a>访问博客</h2><p>之后复制仓库名：你的用户名.github.io 仓库 即可通过网页访问你的博客了~</p><h2 id="四、继续配置"><a href="#四、继续配置" class="headerlink" title="四、继续配置"></a>四、继续配置</h2><p>到根目录中配置\ _config.yml 中 deploy 中新加的百度主动推送（格式一定要对齐！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">- type: git</span><br><span class="line">  repository: git@github.com:Dou-JiGu/Dou-JiGu.github.io.git # ssh 地址</span><br><span class="line">  branch: main # 分支</span><br><span class="line">- type: baidu_url_submitter # 这是新加的百度主动推送</span><br></pre></td></tr></table></figure><p>到根目录中配置\ _config.yml 中最后添加配置代码，并替换 theme</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line"></span><br><span class="line">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="line"></span><br><span class="line">live2d:</span><br><span class="line">enable: true #开关插件版看板娘</span><br><span class="line">scriptFrom: local # 默认</span><br><span class="line"></span><br><span class="line"># scriptFrom: https://cdn.cbd.int/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br><span class="line"></span><br><span class="line">tagMode: false # 标签模式, 是否仅替换 live2d tag 标签而非插入到所有页面中</span><br><span class="line">debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">model:</span><br><span class="line">use: live2d-widget-model-koharu # 可替换模型 # npm-module package name # use: https://unpkg.com/live2d-widget-model-koharu@1.0.5/assets/koharu.model.json # 你的自定义 url</span><br><span class="line">display:</span><br><span class="line">position: left #控制看板娘位置</span><br><span class="line">width: 150 #控制看板娘大小</span><br><span class="line">height: 300 #控制看板娘大小</span><br><span class="line">mobile:</span><br><span class="line">show: false # 手机中是否展示</span><br><span class="line"></span><br><span class="line"># https://github.com/hexojs/hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line">sitemap:</span><br><span class="line">path: sitemap.xml</span><br><span class="line">rel: false</span><br><span class="line">tags: true</span><br><span class="line">categories: true</span><br><span class="line"></span><br><span class="line"># https://github.com/coneycode/hexo-generator-baidu-sitemap</span><br><span class="line"></span><br><span class="line">baidusitemap:</span><br><span class="line">path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"># https://github.com/hexojs/hexo-generator-feed</span><br><span class="line"></span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line"></span><br><span class="line">plugins: - hexo-generator-feed - hexo-generator-baidu-sitemap - hexo-generator-sitemap</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>要在 hexo generate 或 hexo deploy 之前使用追番插件，否则不会显示追番页面！</p><p>更新番剧命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -u</span><br></pre></td></tr></table></figure><p>删除数据命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><h2 id="追番插件"><a href="#追番插件" class="headerlink" title="追番插件"></a>追番插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/HCLonely/hexo-bilibili-bangumi</span><br><span class="line"></span><br><span class="line">bangumi: # 追番设置</span><br><span class="line">enable: true</span><br><span class="line">path:</span><br><span class="line">vmid: 275606116 # 替换为自己的 b 站的用户 id</span><br><span class="line">title: &#x27;追番列表&#x27;</span><br><span class="line">quote: &#x27;生命不息，追番不止！&#x27;</span><br><span class="line">show: 1</span><br><span class="line">lazyload: false</span><br><span class="line">loading:</span><br><span class="line">metaColor:</span><br><span class="line">color:</span><br><span class="line">webp:</span><br><span class="line">progress:</span><br><span class="line">extra_options:</span><br><span class="line">key: value</span><br><span class="line">cinema: # 追剧设置</span><br><span class="line">enable: false</span><br><span class="line">path:</span><br><span class="line">vmid: 275606116 # 替换为自己的 b 站的用户 id</span><br><span class="line">title: &#x27;追剧列表&#x27;</span><br><span class="line">quote: &#x27;生命不息，追剧不止！&#x27;</span><br><span class="line">show: 1</span><br><span class="line">lazyload: true</span><br><span class="line">loading:</span><br><span class="line">metaColor:</span><br><span class="line">color:</span><br><span class="line">webp:</span><br><span class="line">progress:</span><br><span class="line">extra_options:</span><br><span class="line">key: value</span><br><span class="line"></span><br><span class="line"># 百度主动推送</span><br><span class="line"></span><br><span class="line"># https://github.com/huiwang/hexo-baidu-url-submit</span><br><span class="line"></span><br><span class="line">baidu_url_submit:</span><br><span class="line">count: 1 # 提交最新的多少个链接</span><br><span class="line">host: www.wowowo.top # 在百度站长平台中添加的域名</span><br><span class="line">token: SzqY2ifHCYLLf4jH # 秘钥</span><br><span class="line">path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line"></span><br><span class="line"># APlayer</span><br><span class="line"></span><br><span class="line"># https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</span><br><span class="line"></span><br><span class="line">aplayer:</span><br><span class="line">meting: true</span><br><span class="line">asset_inject: false</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="一一装上插件"><a href="#一一装上插件" class="headerlink" title="一一装上插件"></a>一一装上插件</h2><p>安装 live2d</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装 live2d</span><br><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>安装模型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装模型</span><br><span class="line">npm install --save live2d-widget-model-koharu # 可替换模型</span><br></pre></td></tr></table></figure><p>安装 sitemap ，方便爬虫爬我们的网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装 sitemap ，方便爬虫爬我们的网站</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save-dev</span><br></pre></td></tr></table></figure><p>装 Rss ，也类似方便爬虫爬我们的网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 装 Rss ，也类似方便爬虫爬我们的网站</span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>追番插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 追番插件</span><br><span class="line">npm install hexo-bilibili-bangumi --save</span><br><span class="line">（配置一下，vmid 需要自己去拿！）</span><br></pre></td></tr></table></figure><p>百度主动推送</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 百度主动推送</span><br><span class="line">记得修改一下百度主动推送，参照：</span><br><span class="line"></span><br><span class="line"># https://github.com/huiwang/hexo-baidu-url-submit</span><br><span class="line"></span><br><span class="line">baidu_url_submit:</span><br><span class="line">count: 1 # 提交最新的多少个链接</span><br><span class="line">host: wowowo.top # 在百度站长平台中添加的域名，改成自己的站点</span><br><span class="line">token: 自己的秘钥 # 秘钥</span><br><span class="line">path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line">（具体看大佬的教程）</span><br></pre></td></tr></table></figure><p>一些配置</p><ol><li><p>将主题配置中的懒加载 lazyload:enable 打开，把根目录配置里的懒加载关闭（避免冲突）</p></li><li><p>到主题配置\ _config.butterfly.yml 里，查找 aplayerInject，全部改为 true，防止重复加载</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">aplayerInject: # 防止重复加载</span><br><span class="line">enable: true</span><br><span class="line">per_page: true</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>将音乐代码放到主题配置_config.butterfly.yml 里的 Inject 中选择位置 head&#x2F;bottom，将语法复制进去</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># aplayer 音乐</span><br><span class="line"></span><br><span class="line">- &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;1708664797&quot; data-server=&quot;tencent&quot; data-type=&quot;playlist&quot;   data-order=&quot;list&quot; data-fixed=&quot;true&quot; data-preload=&quot;auto&quot; data-autoplay=&quot;false&quot; data-mutex=&quot;true&quot; &gt;&lt;/div&gt;</span><br><span class="line">  （记得改 data-id 以及 data-server，具体看大佬教程，可以去github搜aplayer音乐看如何配置）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="五、装配-PWA"><a href="#五、装配-PWA" class="headerlink" title="五、装配 PWA"></a>五、装配 PWA</h2><p>用处：</p><ol><li>右上角可以有安装按钮，可以离线看博客</li><li>可以有缓存，加快我们的访问速度</li><li>博客更新后，右上角会有通知<br>安装必要插件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install --global gulp-cli # 全局安装 gulp 命令集</span><br><span class="line">npm install workbox-build gulp --save # 安装 workbox 和 gulp 插件</span><br></pre></td></tr></table></figure><p>压缩 html 插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 压缩 html 插件</span><br><span class="line"></span><br><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install --save gulp-htmlmin</span><br></pre></td></tr></table></figure><p>压缩 css 插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 压缩 css 插件</span><br><span class="line"></span><br><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure><p>压缩 js 插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 压缩 js 插件</span><br><span class="line"></span><br><span class="line"># 使用 babel 压缩 js，与 terser 二选一</span><br><span class="line"></span><br><span class="line">npm install --save-dev gulp-uglify</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br><span class="line"></span><br><span class="line"># 使用 terser 压缩 js，与 babel 二选一（建议 terser 压缩 js，babel 容易混淆代码语义）</span><br><span class="line"></span><br><span class="line">npm install gulp-terser --save-dev</span><br><span class="line">npm install --save-dev gulp-babel @babel/core @babel/preset-env</span><br></pre></td></tr></table></figure><p>压缩图片插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 压缩图片插件（图片压缩，一定是 node12.x 才有用，node16.x 就没有用了）</span><br><span class="line"></span><br><span class="line">npm install --save-dev gulp-imagemin</span><br></pre></td></tr></table></figure><p>压缩字体插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 压缩字体插件(font-min 仅支持压缩 ttf 格式的字体包)</span><br><span class="line"></span><br><span class="line">npm install gulp-fontmin --save-dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在根目录的 package.json 中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&quot;type&quot;: &quot;module&quot;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="在根目录新建文件-gulpfile-js，复制以下内容到-gulpfile-js-中（主要用处：用来压缩）"><a href="#在根目录新建文件-gulpfile-js，复制以下内容到-gulpfile-js-中（主要用处：用来压缩）" class="headerlink" title="在根目录新建文件 gulpfile.js，复制以下内容到 gulpfile.js 中（主要用处：用来压缩）"></a>在根目录新建文件 gulpfile.js，复制以下内容到 gulpfile.js 中（主要用处：用来压缩）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import gulp from &#x27;gulp&#x27;;</span><br><span class="line">import cleanCSS from &#x27;gulp-clean-css&#x27;;</span><br><span class="line">import htmlmin from &#x27;gulp-htmlmin&#x27;;</span><br><span class="line">import htmlclean from &#x27;gulp-htmlclean&#x27;;</span><br><span class="line">import workbox from &#x27;workbox-build&#x27;;</span><br><span class="line">import fontmin from &#x27;gulp-fontmin&#x27;;</span><br><span class="line"></span><br><span class="line">// 若使用 babel 压缩 js，则取消下方注释，并注释 terser 的代码</span><br><span class="line">// var uglify = require(&#x27;gulp-uglify&#x27;);</span><br><span class="line">// var babel = require(&#x27;gulp-babel&#x27;);</span><br><span class="line"></span><br><span class="line">// 若使用 terser 压缩 js</span><br><span class="line">import terser from &#x27;gulp-terser&#x27;;</span><br><span class="line"></span><br><span class="line">//pwa</span><br><span class="line">gulp.task(&#x27;generate-service-worker&#x27;, () =&gt; &#123;</span><br><span class="line">return workbox.injectManifest(&#123;</span><br><span class="line">swSrc: &#x27;./sw-template.js&#x27;,</span><br><span class="line">swDest: &#x27;./public/sw.js&#x27;,</span><br><span class="line">globDirectory: &#x27;./public&#x27;,</span><br><span class="line">globPatterns: [</span><br><span class="line">// 缓存所有以下类型的文件，极端不推荐</span><br><span class="line">// &quot;**/*.&#123;html,css,js,json,woff2,xml&#125;&quot;</span><br><span class="line">// 推荐只缓存 404，主页和主要样式和脚本。</span><br><span class="line">&#x27;404.html&#x27;,</span><br><span class="line">&#x27;index.html&#x27;,</span><br><span class="line">&#x27;js/main.js&#x27;,</span><br><span class="line">&#x27;css/index.css&#x27;,</span><br><span class="line">],</span><br><span class="line">modifyURLPrefix: &#123;</span><br><span class="line">&#x27;&#x27;: &#x27;./&#x27;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//minify js babel</span><br><span class="line">// 若使用 babel 压缩 js，则取消下方注释，并注释 terser 的代码</span><br><span class="line">// gulp.task(&#x27;compress&#x27;, () =&gt;</span><br><span class="line">// gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;])</span><br><span class="line">// .pipe(babel(&#123;</span><br><span class="line">// presets: [&#x27;@babel/preset-env&#x27;]</span><br><span class="line">// &#125;))</span><br><span class="line">// .pipe(uglify().on(&#x27;error&#x27;, function(e)&#123;</span><br><span class="line">// console.log(e);</span><br><span class="line">// &#125;))</span><br><span class="line">// .pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">// );</span><br><span class="line"></span><br><span class="line">// minify js - gulp-tester</span><br><span class="line">// 若使用 terser 压缩 js</span><br><span class="line">gulp.task(&#x27;compress&#x27;, () =&gt;</span><br><span class="line">gulp</span><br><span class="line">.src([</span><br><span class="line">&#x27;./public/**/*.js&#x27;,</span><br><span class="line">&#x27;!./public/**/*.min.js&#x27;,</span><br><span class="line">&#x27;!./public/js/custom/galmenu.js&#x27;,</span><br><span class="line">&#x27;!./public/js/custom/gitcalendar.js&#x27;,</span><br><span class="line">])</span><br><span class="line">.pipe(terser())</span><br><span class="line">.pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">//css</span><br><span class="line">gulp.task(&#x27;minify-css&#x27;, () =&gt; &#123;</span><br><span class="line">return gulp</span><br><span class="line">.src(&#x27;./public/\*_/_.css&#x27;)</span><br><span class="line">.pipe(</span><br><span class="line">cleanCSS(&#123;</span><br><span class="line">compatibility: &#x27;ie11&#x27;,</span><br><span class="line">&#125;)</span><br><span class="line">)</span><br><span class="line">.pipe(gulp.dest(&#x27;./public&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩 public 目录内 html</span><br><span class="line">gulp.task(&#x27;minify-html&#x27;, () =&gt; &#123;</span><br><span class="line">return gulp</span><br><span class="line">.src(&#x27;./public/\*_/_.html&#x27;)</span><br><span class="line">.pipe(htmlclean())</span><br><span class="line">.pipe(</span><br><span class="line">htmlmin(&#123;</span><br><span class="line">removeComments: true, //清除 HTML 註释</span><br><span class="line">collapseWhitespace: true, //压缩 HTML</span><br><span class="line">collapseBooleanAttributes: true, //省略布尔属性的值 &lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">removeEmptyAttributes: true, //删除所有空格作属性值 &lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">removeScriptTypeAttributes: true, //删除 &lt;script&gt; 的 type=&quot;text/javascript&quot;</span><br><span class="line">removeStyleLinkTypeAttributes: true, //删除 &lt;style&gt; 和 &lt;link&gt; 的 type=&quot;text/css&quot;</span><br><span class="line">minifyJS: true, //压缩页面 JS</span><br><span class="line">minifyCSS: true, //压缩页面 CSS</span><br><span class="line">minifyURLs: true,</span><br><span class="line">&#125;)</span><br><span class="line">)</span><br><span class="line">.pipe(gulp.dest(&#x27;./public&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//压缩字体</span><br><span class="line">function minifyFont(text, cb) &#123;</span><br><span class="line">gulp</span><br><span class="line">.src(&#x27;./public/fonts/\*.ttf&#x27;) //原字体所在目录</span><br><span class="line">.pipe(</span><br><span class="line">fontmin(&#123;</span><br><span class="line">text: text,</span><br><span class="line">&#125;)</span><br><span class="line">)</span><br><span class="line">.pipe(gulp.dest(&#x27;./public/fontsdest/&#x27;)) //压缩后的输出目录</span><br><span class="line">.on(&#x27;end&#x27;, cb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;mini-font&#x27;, cb =&gt; &#123;</span><br><span class="line">var buffers = [];</span><br><span class="line">gulp</span><br><span class="line">.src([&#x27;./public/**/*.html&#x27;]) //HTML 文件所在目录请根据自身情况修改</span><br><span class="line">.on(&#x27;data&#x27;, function (file) &#123;</span><br><span class="line">buffers.push(file.contents);</span><br><span class="line">&#125;)</span><br><span class="line">.on(&#x27;end&#x27;, function () &#123;</span><br><span class="line">var text = Buffer.concat(buffers).toString(&#x27;utf-8&#x27;);</span><br><span class="line">minifyFont(text, cb);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 执行 gulp 命令时执行的任务</span><br><span class="line">gulp.task(</span><br><span class="line">&#x27;default&#x27;,</span><br><span class="line">gulp.series(</span><br><span class="line">&#x27;generate-service-worker&#x27;,</span><br><span class="line">gulp.parallel(&#x27;compress&#x27;, &#x27;minify-html&#x27;, &#x27;minify-css&#x27;, &#x27;mini-font&#x27;)</span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在根目录新建文件 sw-template.js 文件，复制以下内容到 sw-template.js 中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const workboxVersion = &#x27;5.1.3&#x27;;</span><br><span class="line"></span><br><span class="line">importScripts(`https://storage.googleapis.com/workbox-cdn/releases/$&#123;workboxVersion&#125;/workbox-sw.js`);</span><br><span class="line"></span><br><span class="line">workbox.core.setCacheNameDetails(&#123;</span><br><span class="line">prefix: &#x27;兜叽咕&#x27;, // 缓存名称</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">workbox.core.skipWaiting();</span><br><span class="line"></span><br><span class="line">workbox.core.clientsClaim();</span><br><span class="line"></span><br><span class="line">// 注册成功后要立即缓存的资源列表</span><br><span class="line">// 具体缓存列表在 gulpfile.js 中配置，见下文</span><br><span class="line">workbox.precaching.precacheAndRoute(self.\_\_WB_MANIFEST, &#123;</span><br><span class="line">directoryIndex: null,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 清空过期缓存</span><br><span class="line">workbox.precaching.cleanupOutdatedCaches();</span><br><span class="line"></span><br><span class="line">// 图片资源（可选，不需要就注释掉）</span><br><span class="line">// workbox.routing.registerRoute(</span><br><span class="line">// /\.(?:png|jpg|jpeg|gif|bmp|webp|svg|ico)$/,</span><br><span class="line">// new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">// cacheName: &#x27;images&#x27;,</span><br><span class="line">// plugins: [</span><br><span class="line">// new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">// maxEntries: 1000,</span><br><span class="line">// maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">// &#125;),</span><br><span class="line">// new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">// statuses: [0, 200],</span><br><span class="line">// &#125;),</span><br><span class="line">// ],</span><br><span class="line">// &#125;)</span><br><span class="line">// )</span><br><span class="line"></span><br><span class="line">// 字体文件（可选，不需要就注释掉）</span><br><span class="line">workbox.routing.registerRoute(</span><br><span class="line">/\.(?:eot|ttf|woff|woff2)$/,</span><br><span class="line">new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">cacheName: &#x27;fonts&#x27;,</span><br><span class="line">plugins: [</span><br><span class="line">new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">maxEntries: 1000,</span><br><span class="line">maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">&#125;),</span><br><span class="line">new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">statuses: [0, 200],</span><br><span class="line">&#125;),</span><br><span class="line">],</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// 谷歌字体（可选，不需要就注释掉）</span><br><span class="line">workbox.routing.registerRoute(</span><br><span class="line">/^https:\/\/fonts\.googleapis\.com/,</span><br><span class="line">new workbox.strategies.StaleWhileRevalidate(&#123;</span><br><span class="line">cacheName: &#x27;google-fonts-stylesheets&#x27;,</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line">workbox.routing.registerRoute(</span><br><span class="line">/^https:\/\/fonts\.gstatic\.com/,</span><br><span class="line">new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">cacheName: &#x27;google-fonts-webfonts&#x27;,</span><br><span class="line">plugins: [</span><br><span class="line">new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">maxEntries: 1000,</span><br><span class="line">maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">&#125;),</span><br><span class="line">new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">statuses: [0, 200],</span><br><span class="line">&#125;),</span><br><span class="line">],</span><br><span class="line">&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">// jsdelivr 的 CDN 资源（可选，不需要就注释掉）</span><br><span class="line">// workbox.routing.registerRoute(</span><br><span class="line">// /^https:\/\/cdn\.jsdelivr\.net/,</span><br><span class="line">// new workbox.strategies.CacheFirst(&#123;</span><br><span class="line">// cacheName: &#x27;static-libs&#x27;,</span><br><span class="line">// plugins: [</span><br><span class="line">// new workbox.expiration.ExpirationPlugin(&#123;</span><br><span class="line">// maxEntries: 1000,</span><br><span class="line">// maxAgeSeconds: 60 _ 60 _ 24 \* 30,</span><br><span class="line">// &#125;),</span><br><span class="line">// new workbox.cacheableResponse.CacheableResponsePlugin(&#123;</span><br><span class="line">// statuses: [0, 200],</span><br><span class="line">// &#125;),</span><br><span class="line">// ],</span><br><span class="line">// &#125;)</span><br><span class="line">// )</span><br><span class="line"></span><br><span class="line">workbox.googleAnalytics.initialize();</span><br></pre></td></tr></table></figure><p>在[Blogroot]\themes\butterfly\layout\includes\third-party\目录下新建 pwanotice.pug 文件，（通知博客文章更新了），打开[Blogroot]\themes\butterfly\layout\includes\third-party\pwanotice.pug,输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#app-refresh.app-refresh(style=&#x27;position: fixed;top: -2.2rem;left: 0;right: 0;z-index: 99999;padding: 0 1rem;font-size: 15px;height: 2.2rem;transition: all 0.3s ease;&#x27;)</span><br><span class="line">.app-refresh-wrap(style=&#x27; display: flex;color: #fff;height: 100%;align-items: center;justify-content: center;&#x27;)</span><br><span class="line">label ✨ 有新文章啦！ 👉</span><br><span class="line">a(href=&#x27;javascript:void(0)&#x27; onclick=&#x27;location.reload()&#x27;)</span><br><span class="line">span(style=&#x27;color: #fff;text-decoration: underline;cursor: pointer;&#x27;) 🍗 点击食用 🍔</span><br><span class="line">script.</span><br><span class="line">if (&#x27;serviceWorker&#x27; in navigator) &#123;</span><br><span class="line">if (navigator.serviceWorker.controller) &#123;</span><br><span class="line">navigator.serviceWorker.addEventListener(&#x27;controllerchange&#x27;, function() &#123;</span><br><span class="line">showNotification()</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">window.addEventListener(&#x27;load&#x27;, function() &#123;</span><br><span class="line">navigator.serviceWorker.register(&#x27;/sw.js&#x27;)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">function showNotification() &#123;</span><br><span class="line">if (GLOBAL_CONFIG.Snackbar) &#123;</span><br><span class="line">var snackbarBg =</span><br><span class="line">document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ?</span><br><span class="line">GLOBAL_CONFIG.Snackbar.bgLight :</span><br><span class="line">GLOBAL_CONFIG.Snackbar.bgDark</span><br><span class="line">var snackbarPos = GLOBAL_CONFIG.Snackbar.position</span><br><span class="line">Snackbar.show(&#123;</span><br><span class="line">text: &#x27;✨ 有新文章啦！ 👉&#x27;,</span><br><span class="line">backgroundColor: snackbarBg,</span><br><span class="line">duration: 500000,</span><br><span class="line">pos: snackbarPos,</span><br><span class="line">actionText: &#x27;🍗 点击食用 🍔&#x27;,</span><br><span class="line">actionTextColor: &#x27;#fff&#x27;,</span><br><span class="line">onActionClick: function(e) &#123;</span><br><span class="line">location.reload()</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">var showBg =</span><br><span class="line">document.documentElement.getAttribute(&#x27;data-theme&#x27;) === &#x27;light&#x27; ?</span><br><span class="line">&#x27;#5CA1FF&#x27; :</span><br><span class="line">&#x27;#1f1f1f&#x27;</span><br><span class="line">var cssText = `top: 0; background: $&#123;showBg&#125;;`</span><br><span class="line">document.getElementById(&#x27;app-refresh&#x27;).style.cssText = cssText</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改[Blogroot]\themes\butterfly\layout\includes\additional-js.pug,在文件底部添加以下内容，注意缩进。butterfly_v3.6.0 取消了缓存配置，转为完全默认，需要将{cache:theme.fragment_cache}改为{cache: true}:（pug 是严格缩进模式！）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">if theme.pwa.enable</span><br><span class="line">!=partial(&#x27;includes/third-party/pwanotice&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将你的图标包移入相应的目录，例如我是&#x2F;img&#x2F;siteicon&#x2F;，所以放到[Blogroot]&#x2F;source&#x2F;img&#x2F;siteicon&#x2F;目录下。新建文件名为 manifest.json 并将其放到[Blogroot]&#x2F;source 目录下，此时还不能直接用，需要添加一些内容，以下是我的 manifest.json 配置内容，权且作为参考，其中的 theme_color 建议用取色器取设计的图标的主色调，同时务必配置 start_url 和 name 的配置项，这关系到你之后能否看到浏览器的应用安装按钮。（<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a> 阿里巴巴矢量图标库，可以设置站点图标）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">&quot;name&quot;: &quot;欢迎来到 兜 叽 咕 の 小 小 世 界&quot;,</span><br><span class="line">&quot;short_name&quot;: &quot;兜叽咕&quot;,</span><br><span class="line">&quot;theme_color&quot;: &quot;#5CA1FF&quot;,</span><br><span class="line">&quot;background_color&quot;: &quot;#5CA1FF&quot;,</span><br><span class="line">&quot;display&quot;: &quot;standalone&quot;,</span><br><span class="line">&quot;scope&quot;: &quot;/&quot;,</span><br><span class="line">&quot;start_url&quot;: &quot;/&quot;,</span><br><span class="line">&quot;icons&quot;: [&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/16.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;16x16&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/32.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;32x32&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/48.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;48x48&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/64.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;64x64&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/128.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;128x128&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/144.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;144x144&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">&quot;src&quot;: &quot;/img/siteicon/512.png&quot;,</span><br><span class="line">&quot;sizes&quot;: &quot;512x512&quot;,</span><br><span class="line">&quot;type&quot;: &quot;image/png&quot;</span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line">&quot;splash_pages&quot;: null</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打开主题配置文件[Blogroot]&#x2F;_config.butterfly.yml,找到 PWA 配置项。添加图标路径。这里的 theme_color 建议改成你图标的主色调，包括 manifest.json 中的 theme_color 也是如此。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pwa:</span><br><span class="line">enable: true</span><br><span class="line">manifest: /manifest.json</span><br><span class="line">theme_color: &#x27;#5CA1FF&#x27;</span><br><span class="line">apple_touch_icon: /img/siteicon/128.png</span><br><span class="line">favicon_32_32: /img/siteicon/32.png</span><br><span class="line">favicon_16_16: /img/siteicon/16.png</span><br><span class="line">mask_icon: /img/siteicon/128.png</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>终端输入 gulp 进行压缩<br>hexo 三件套（本地看不到 pwa，运行 hexo g 之后必须运行 gulp 指令，不然 PWA 不会生效！ <a href="https://akilar.top/posts/8f31c3d0/%EF%BC%89">https://akilar.top/posts/8f31c3d0/）</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hexo d 直接部署</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="六、配置自定义-css（一图流）"><a href="#六、配置自定义-css（一图流）" class="headerlink" title="六、配置自定义 css（一图流）"></a>六、配置自定义 css（一图流）</h2><h2 id="七、标签外挂"><a href="#七、标签外挂" class="headerlink" title="七、标签外挂"></a>七、标签外挂</h2><h2 id="八、hexo-完成-github-action-自动部署"><a href="#八、hexo-完成-github-action-自动部署" class="headerlink" title="八、hexo 完成 github action 自动部署"></a>八、hexo 完成 github action 自动部署</h2><h2 id="九、图床"><a href="#九、图床" class="headerlink" title="九、图床"></a>九、图床</h2><h2 id="十、自定义域名"><a href="#十、自定义域名" class="headerlink" title="十、自定义域名"></a>十、自定义域名</h2><h1 id="本篇未完结，后续还会慢慢更新、修订……"><a href="#本篇未完结，后续还会慢慢更新、修订……" class="headerlink" title="本篇未完结，后续还会慢慢更新、修订……"></a>本篇未完结，后续还会慢慢更新、修订……</h1>]]></content>
    
    
    <summary type="html">有关Hexo博客网站生成器的使用教程~</summary>
    
    
    
    <category term="框架" scheme="https://wowowo.top/categories/%E6%A1%86%E6%9E%B6/"/>
    
    
    <category term="Hexo" scheme="https://wowowo.top/tags/Hexo/"/>
    
  </entry>
  
</feed>
